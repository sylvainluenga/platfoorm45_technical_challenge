{"ast":null,"code":"import on from \"./on.js\";\nimport isEventSupported from \"./utils/isEventSupported.js\";\n\n/**\n * Track mouse/touch events for a given element.\n */\nvar PointerMoveTracker = /*#__PURE__*/function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function PointerMoveTracker(domNode, _ref) {\n    var _this = this;\n    var onMove = _ref.onMove,\n      onMoveEnd = _ref.onMoveEnd,\n      _ref$useTouchEvent = _ref.useTouchEvent,\n      useTouchEvent = _ref$useTouchEvent === void 0 ? true : _ref$useTouchEvent;\n    this.isDragStatus = false;\n    this.useTouchEvent = true;\n    this.animationFrameID = null;\n    this.domNode = void 0;\n    this.onMove = null;\n    this.onMoveEnd = null;\n    this.eventMoveToken = null;\n    this.eventUpToken = null;\n    this.moveEvent = null;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.isDragging = function () {\n      return _this.isDragStatus;\n    };\n    this.onDragMove = function (event) {\n      var x = _this.getClientX(event);\n      var y = _this.getClientY(event);\n      _this.deltaX += x - _this.x;\n      _this.deltaY += x - _this.y;\n      if (_this.animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFrame` to avoid over-updating.\n        _this.animationFrameID = requestAnimationFrame(_this.didDragMove);\n      }\n      _this.x = x;\n      _this.y = y;\n      _this.moveEvent = event;\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    };\n    this.didDragMove = function () {\n      _this.animationFrameID = null;\n      _this.onMove(_this.deltaX, _this.deltaY, _this.moveEvent);\n      _this.deltaX = 0;\n      _this.deltaY = 0;\n    };\n    this.onDragUp = function (event) {\n      var _this$onMoveEnd;\n      if (_this.animationFrameID) {\n        _this.didDragMove();\n      }\n      (_this$onMoveEnd = _this.onMoveEnd) === null || _this$onMoveEnd === void 0 ? void 0 : _this$onMoveEnd.call(_this, event);\n    };\n    this.domNode = domNode;\n    this.onMove = onMove;\n    this.onMoveEnd = onMoveEnd;\n    this.useTouchEvent = useTouchEvent;\n  }\n  var _proto = PointerMoveTracker.prototype;\n  _proto.isSupportTouchEvent = function isSupportTouchEvent() {\n    return this.useTouchEvent && isEventSupported('touchstart');\n  };\n  _proto.getClientX = function getClientX(event) {\n    var _touches;\n    return this.isSupportTouchEvent() ? (_touches = event.touches) === null || _touches === void 0 ? void 0 : _touches[0].clientX : event.clientX;\n  };\n  _proto.getClientY = function getClientY(event) {\n    var _touches2;\n    return this.isSupportTouchEvent() ? (_touches2 = event.touches) === null || _touches2 === void 0 ? void 0 : _touches2[0].clientY : event.clientY;\n  }\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */;\n  _proto.captureMoves = function captureMoves(event) {\n    if (!this.eventMoveToken && !this.eventUpToken) {\n      if (this.isSupportTouchEvent()) {\n        this.eventMoveToken = on(this.domNode, 'touchmove', this.onDragMove, {\n          passive: false\n        });\n        this.eventUpToken = on(this.domNode, 'touchend', this.onDragUp, {\n          passive: false\n        });\n        on(this.domNode, 'touchcancel', this.releaseMoves);\n      } else {\n        this.eventMoveToken = on(this.domNode, 'mousemove', this.onDragMove);\n        this.eventUpToken = on(this.domNode, 'mouseup', this.onDragUp);\n      }\n    }\n    if (!this.isDragStatus) {\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.isDragStatus = true;\n      this.x = this.getClientX(event);\n      this.y = this.getClientY(event);\n    }\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * These releases all of the listeners on document.body.\n   */;\n  _proto.releaseMoves = function releaseMoves() {\n    if (this.eventMoveToken) {\n      this.eventMoveToken.off();\n      this.eventMoveToken = null;\n    }\n    if (this.eventUpToken) {\n      this.eventUpToken.off();\n      this.eventUpToken = null;\n    }\n    if (this.animationFrameID !== null) {\n      cancelAnimationFrame(this.animationFrameID);\n      this.animationFrameID = null;\n    }\n    if (this.isDragStatus) {\n      this.isDragStatus = false;\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  /**\n   * Returns whether or not if the mouse movement is being tracked.\n   */;\n  return PointerMoveTracker;\n}();\nexport { PointerMoveTracker as default };","map":{"version":3,"names":["on","isEventSupported","PointerMoveTracker","domNode","_ref","_this","onMove","onMoveEnd","_ref$useTouchEvent","useTouchEvent","isDragStatus","animationFrameID","eventMoveToken","eventUpToken","moveEvent","deltaX","deltaY","x","y","isDragging","onDragMove","event","getClientX","getClientY","requestAnimationFrame","didDragMove","cancelable","preventDefault","onDragUp","_this$onMoveEnd","call","_proto","prototype","isSupportTouchEvent","_touches","touches","clientX","_touches2","clientY","captureMoves","passive","releaseMoves","off","cancelAnimationFrame","default"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/dom-lib/esm/PointerMoveTracker.js"],"sourcesContent":["import on from \"./on.js\";\nimport isEventSupported from \"./utils/isEventSupported.js\";\n\n/**\n * Track mouse/touch events for a given element.\n */\nvar PointerMoveTracker = /*#__PURE__*/function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function PointerMoveTracker(domNode, _ref) {\n    var _this = this;\n\n    var onMove = _ref.onMove,\n        onMoveEnd = _ref.onMoveEnd,\n        _ref$useTouchEvent = _ref.useTouchEvent,\n        useTouchEvent = _ref$useTouchEvent === void 0 ? true : _ref$useTouchEvent;\n    this.isDragStatus = false;\n    this.useTouchEvent = true;\n    this.animationFrameID = null;\n    this.domNode = void 0;\n    this.onMove = null;\n    this.onMoveEnd = null;\n    this.eventMoveToken = null;\n    this.eventUpToken = null;\n    this.moveEvent = null;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.x = 0;\n    this.y = 0;\n\n    this.isDragging = function () {\n      return _this.isDragStatus;\n    };\n\n    this.onDragMove = function (event) {\n      var x = _this.getClientX(event);\n\n      var y = _this.getClientY(event);\n\n      _this.deltaX += x - _this.x;\n      _this.deltaY += x - _this.y;\n\n      if (_this.animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFrame` to avoid over-updating.\n        _this.animationFrameID = requestAnimationFrame(_this.didDragMove);\n      }\n\n      _this.x = x;\n      _this.y = y;\n      _this.moveEvent = event;\n\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    };\n\n    this.didDragMove = function () {\n      _this.animationFrameID = null;\n\n      _this.onMove(_this.deltaX, _this.deltaY, _this.moveEvent);\n\n      _this.deltaX = 0;\n      _this.deltaY = 0;\n    };\n\n    this.onDragUp = function (event) {\n      var _this$onMoveEnd;\n\n      if (_this.animationFrameID) {\n        _this.didDragMove();\n      }\n\n      (_this$onMoveEnd = _this.onMoveEnd) === null || _this$onMoveEnd === void 0 ? void 0 : _this$onMoveEnd.call(_this, event);\n    };\n\n    this.domNode = domNode;\n    this.onMove = onMove;\n    this.onMoveEnd = onMoveEnd;\n    this.useTouchEvent = useTouchEvent;\n  }\n\n  var _proto = PointerMoveTracker.prototype;\n\n  _proto.isSupportTouchEvent = function isSupportTouchEvent() {\n    return this.useTouchEvent && isEventSupported('touchstart');\n  };\n\n  _proto.getClientX = function getClientX(event) {\n    var _touches;\n\n    return this.isSupportTouchEvent() ? (_touches = event.touches) === null || _touches === void 0 ? void 0 : _touches[0].clientX : event.clientX;\n  };\n\n  _proto.getClientY = function getClientY(event) {\n    var _touches2;\n\n    return this.isSupportTouchEvent() ? (_touches2 = event.touches) === null || _touches2 === void 0 ? void 0 : _touches2[0].clientY : event.clientY;\n  }\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n  ;\n\n  _proto.captureMoves = function captureMoves(event) {\n    if (!this.eventMoveToken && !this.eventUpToken) {\n      if (this.isSupportTouchEvent()) {\n        this.eventMoveToken = on(this.domNode, 'touchmove', this.onDragMove, {\n          passive: false\n        });\n        this.eventUpToken = on(this.domNode, 'touchend', this.onDragUp, {\n          passive: false\n        });\n        on(this.domNode, 'touchcancel', this.releaseMoves);\n      } else {\n        this.eventMoveToken = on(this.domNode, 'mousemove', this.onDragMove);\n        this.eventUpToken = on(this.domNode, 'mouseup', this.onDragUp);\n      }\n    }\n\n    if (!this.isDragStatus) {\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.isDragStatus = true;\n      this.x = this.getClientX(event);\n      this.y = this.getClientY(event);\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * These releases all of the listeners on document.body.\n   */\n  ;\n\n  _proto.releaseMoves = function releaseMoves() {\n    if (this.eventMoveToken) {\n      this.eventMoveToken.off();\n      this.eventMoveToken = null;\n    }\n\n    if (this.eventUpToken) {\n      this.eventUpToken.off();\n      this.eventUpToken = null;\n    }\n\n    if (this.animationFrameID !== null) {\n      cancelAnimationFrame(this.animationFrameID);\n      this.animationFrameID = null;\n    }\n\n    if (this.isDragStatus) {\n      this.isDragStatus = false;\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  /**\n   * Returns whether or not if the mouse movement is being tracked.\n   */\n  ;\n\n  return PointerMoveTracker;\n}();\n\nexport { PointerMoveTracker as default };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}