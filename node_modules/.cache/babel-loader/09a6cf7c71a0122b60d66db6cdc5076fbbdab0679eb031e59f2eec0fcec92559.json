{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// Headless Disclosure\n// Ref: https://w3c.github.io/aria-practices/#disclosure\nimport React, { useMemo, useReducer, useRef, useCallback, useContext } from 'react';\nimport DisclosureContext, { DisclosureActionTypes } from \"./DisclosureContext.js\";\nimport DisclosureButton from \"./DisclosureButton.js\";\nimport DisclosureContent from \"./DisclosureContent.js\";\nimport useClickOutside from \"../hooks/useClickOutside.js\";\nvar initialDisclosureState = {\n  open: false\n};\nfunction disclosureReducer(state, action) {\n  switch (action.type) {\n    case DisclosureActionTypes.Show:\n      return _extends({}, state, {\n        open: true\n      });\n    case DisclosureActionTypes.Hide:\n      return _extends({}, state, {\n        open: false\n      });\n  }\n  return state;\n}\nvar Disclosure = /*#__PURE__*/React.memo(function (props) {\n  var children = props.children,\n    openProp = props.open,\n    _props$defaultOpen = props.defaultOpen,\n    defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n    _props$hideOnClickOut = props.hideOnClickOutside,\n    hideOnClickOutside = _props$hideOnClickOut === void 0 ? false : _props$hideOnClickOut,\n    onToggle = props.onToggle,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? ['click'] : _props$trigger;\n  var parentDisclosure = useContext(DisclosureContext);\n  var _useReducer = useReducer(disclosureReducer, _extends({}, initialDisclosureState, {\n      open: defaultOpen\n    })),\n    openState = _useReducer[0].open,\n    dispatch = _useReducer[1];\n  var containerElementRef = useRef(null);\n  var open = openProp !== null && openProp !== void 0 ? openProp : openState;\n  useClickOutside({\n    enabled: hideOnClickOutside,\n    isOutside: function isOutside(event) {\n      var _containerElementRef$;\n      return !((_containerElementRef$ = containerElementRef.current) !== null && _containerElementRef$ !== void 0 && _containerElementRef$.contains(event.target));\n    },\n    handle: function handle() {\n      return dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n    }\n  });\n  var onMouseEnter = useCallback(function (event) {\n    if (!open) {\n      dispatch({\n        type: DisclosureActionTypes.Show\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(true, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var onMouseLeave = useCallback(function (event) {\n    if (open) {\n      dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var contextValue = useMemo(function () {\n    var cascadeDispatch = function cascadeDispatch(action) {\n      var result = dispatch(action);\n      if ('cascade' in action) {\n        parentDisclosure === null || parentDisclosure === void 0 ? void 0 : parentDisclosure[1](action);\n      }\n      return result;\n    };\n    return [{\n      open: open\n    }, cascadeDispatch, {\n      onToggle: onToggle,\n      trigger: trigger\n    }];\n  }, [parentDisclosure, open, dispatch, onToggle, trigger]);\n  var renderProps = useMemo(function () {\n    var renderProps = {\n      open: open\n    };\n    if (trigger.includes('hover')) {\n      renderProps.onMouseEnter = onMouseEnter;\n      renderProps.onMouseLeave = onMouseLeave;\n    }\n    return renderProps;\n  }, [open, trigger, onMouseEnter, onMouseLeave]);\n  return /*#__PURE__*/React.createElement(DisclosureContext.Provider, {\n    value: contextValue\n  }, children(renderProps, containerElementRef));\n});\nDisclosure.Button = DisclosureButton;\nDisclosure.Content = DisclosureContent;\nexport default Disclosure;","map":{"version":3,"names":["_extends","React","useMemo","useReducer","useRef","useCallback","useContext","DisclosureContext","DisclosureActionTypes","DisclosureButton","DisclosureContent","useClickOutside","initialDisclosureState","open","disclosureReducer","state","action","type","Show","Hide","Disclosure","memo","props","children","openProp","_props$defaultOpen","defaultOpen","_props$hideOnClickOut","hideOnClickOutside","onToggle","_props$trigger","trigger","parentDisclosure","_useReducer","openState","dispatch","containerElementRef","enabled","isOutside","event","_containerElementRef$","current","contains","target","handle","onMouseEnter","onMouseLeave","contextValue","cascadeDispatch","result","renderProps","includes","createElement","Provider","value","Button","Content"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/internals/Disclosure/Disclosure.js"],"sourcesContent":["'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// Headless Disclosure\n// Ref: https://w3c.github.io/aria-practices/#disclosure\nimport React, { useMemo, useReducer, useRef, useCallback, useContext } from 'react';\nimport DisclosureContext, { DisclosureActionTypes } from \"./DisclosureContext.js\";\nimport DisclosureButton from \"./DisclosureButton.js\";\nimport DisclosureContent from \"./DisclosureContent.js\";\nimport useClickOutside from \"../hooks/useClickOutside.js\";\nvar initialDisclosureState = {\n  open: false\n};\nfunction disclosureReducer(state, action) {\n  switch (action.type) {\n    case DisclosureActionTypes.Show:\n      return _extends({}, state, {\n        open: true\n      });\n    case DisclosureActionTypes.Hide:\n      return _extends({}, state, {\n        open: false\n      });\n  }\n  return state;\n}\nvar Disclosure = /*#__PURE__*/React.memo(function (props) {\n  var children = props.children,\n    openProp = props.open,\n    _props$defaultOpen = props.defaultOpen,\n    defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n    _props$hideOnClickOut = props.hideOnClickOutside,\n    hideOnClickOutside = _props$hideOnClickOut === void 0 ? false : _props$hideOnClickOut,\n    onToggle = props.onToggle,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? ['click'] : _props$trigger;\n  var parentDisclosure = useContext(DisclosureContext);\n  var _useReducer = useReducer(disclosureReducer, _extends({}, initialDisclosureState, {\n      open: defaultOpen\n    })),\n    openState = _useReducer[0].open,\n    dispatch = _useReducer[1];\n  var containerElementRef = useRef(null);\n  var open = openProp !== null && openProp !== void 0 ? openProp : openState;\n  useClickOutside({\n    enabled: hideOnClickOutside,\n    isOutside: function isOutside(event) {\n      var _containerElementRef$;\n      return !((_containerElementRef$ = containerElementRef.current) !== null && _containerElementRef$ !== void 0 && _containerElementRef$.contains(event.target));\n    },\n    handle: function handle() {\n      return dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n    }\n  });\n  var onMouseEnter = useCallback(function (event) {\n    if (!open) {\n      dispatch({\n        type: DisclosureActionTypes.Show\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(true, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var onMouseLeave = useCallback(function (event) {\n    if (open) {\n      dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var contextValue = useMemo(function () {\n    var cascadeDispatch = function cascadeDispatch(action) {\n      var result = dispatch(action);\n      if ('cascade' in action) {\n        parentDisclosure === null || parentDisclosure === void 0 ? void 0 : parentDisclosure[1](action);\n      }\n      return result;\n    };\n    return [{\n      open: open\n    }, cascadeDispatch, {\n      onToggle: onToggle,\n      trigger: trigger\n    }];\n  }, [parentDisclosure, open, dispatch, onToggle, trigger]);\n  var renderProps = useMemo(function () {\n    var renderProps = {\n      open: open\n    };\n    if (trigger.includes('hover')) {\n      renderProps.onMouseEnter = onMouseEnter;\n      renderProps.onMouseLeave = onMouseLeave;\n    }\n    return renderProps;\n  }, [open, trigger, onMouseEnter, onMouseLeave]);\n  return /*#__PURE__*/React.createElement(DisclosureContext.Provider, {\n    value: contextValue\n  }, children(renderProps, containerElementRef));\n});\nDisclosure.Button = DisclosureButton;\nDisclosure.Content = DisclosureContent;\nexport default Disclosure;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}