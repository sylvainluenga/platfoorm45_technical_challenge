{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useCallback } from 'react';\nimport intersection from 'lodash/intersection';\nimport isUndefined from 'lodash/isUndefined';\nimport { getNodeParentKeys } from \"../utils/getNodeParentKeys.js\";\nimport { isSearching } from \"../utils/isSearching.js\";\nimport { UNSAFE_flattenTree } from \"../utils/flattenTree.js\";\nimport { getNodeCheckState } from \"../../CheckTree/utils.js\";\nimport { useItemDataKeys } from \"../../internals/Tree/TreeProvider.js\";\n/**\n * Determines whether a node should be shown based on the expanded state of its parent nodes.\n */\nfunction shouldShowNodeByParentExpanded(expandItemValues, parentKeys) {\n  if (expandItemValues === void 0) {\n    expandItemValues = [];\n  }\n  if (parentKeys === void 0) {\n    parentKeys = [];\n  }\n  var intersectionKeys = intersection(expandItemValues, parentKeys);\n  if (intersectionKeys.length === parentKeys.length) {\n    return true;\n  }\n  return false;\n}\nfunction useVirtualizedTreeData(nodes, data, options) {\n  var _useItemDataKeys = useItemDataKeys(),\n    childrenKey = _useItemDataKeys.childrenKey,\n    valueKey = _useItemDataKeys.valueKey;\n\n  /**\n   * Formats the virtualized tree data.\n   */\n  return useCallback(function () {\n    var cascade = options.cascade,\n      searchKeyword = options.searchKeyword,\n      expandItemValues = options.expandItemValues;\n    return UNSAFE_flattenTree(data, childrenKey, function (node) {\n      var formatted = {};\n      var curNode = nodes === null || nodes === void 0 ? void 0 : nodes[node.refKey];\n      var parentKeys = getNodeParentKeys(nodes, curNode, valueKey);\n      /**\n       * When using virtualized,\n       * if the parent node is collapsed, the child nodes should be hidden\n       * avoid component height calculation errors\n       */\n      var visible = curNode !== null && curNode !== void 0 && curNode.parent ? shouldShowNodeByParentExpanded(expandItemValues, parentKeys) : true;\n\n      /**\n       * when searching, every node default expand\n       * the node's visible should follow the original state\n       */\n      if (isSearching(searchKeyword)) {\n        visible = node.visible;\n      }\n      if (curNode) {\n        var checkState = !isUndefined(cascade) ? getNodeCheckState(curNode, {\n          cascade: cascade,\n          nodes: nodes,\n          childrenKey: childrenKey\n        }) : undefined;\n        formatted = _extends({}, node, {\n          check: curNode.check,\n          uncheckable: curNode.uncheckable,\n          hasChildren: !!node[childrenKey],\n          layer: curNode.layer,\n          parent: curNode.parent,\n          checkState: checkState,\n          visible: visible\n        });\n      }\n      return formatted;\n    });\n  }, [childrenKey, data, nodes, options, valueKey]);\n}\nexport default useVirtualizedTreeData;","map":{"version":3,"names":["_extends","useCallback","intersection","isUndefined","getNodeParentKeys","isSearching","UNSAFE_flattenTree","getNodeCheckState","useItemDataKeys","shouldShowNodeByParentExpanded","expandItemValues","parentKeys","intersectionKeys","length","useVirtualizedTreeData","nodes","data","options","_useItemDataKeys","childrenKey","valueKey","cascade","searchKeyword","node","formatted","curNode","refKey","visible","parent","checkState","undefined","check","uncheckable","hasChildren","layer"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/Tree/hooks/useVirtualizedTreeData.js"],"sourcesContent":["'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useCallback } from 'react';\nimport intersection from 'lodash/intersection';\nimport isUndefined from 'lodash/isUndefined';\nimport { getNodeParentKeys } from \"../utils/getNodeParentKeys.js\";\nimport { isSearching } from \"../utils/isSearching.js\";\nimport { UNSAFE_flattenTree } from \"../utils/flattenTree.js\";\nimport { getNodeCheckState } from \"../../CheckTree/utils.js\";\nimport { useItemDataKeys } from \"../../internals/Tree/TreeProvider.js\";\n/**\n * Determines whether a node should be shown based on the expanded state of its parent nodes.\n */\nfunction shouldShowNodeByParentExpanded(expandItemValues, parentKeys) {\n  if (expandItemValues === void 0) {\n    expandItemValues = [];\n  }\n  if (parentKeys === void 0) {\n    parentKeys = [];\n  }\n  var intersectionKeys = intersection(expandItemValues, parentKeys);\n  if (intersectionKeys.length === parentKeys.length) {\n    return true;\n  }\n  return false;\n}\nfunction useVirtualizedTreeData(nodes, data, options) {\n  var _useItemDataKeys = useItemDataKeys(),\n    childrenKey = _useItemDataKeys.childrenKey,\n    valueKey = _useItemDataKeys.valueKey;\n\n  /**\n   * Formats the virtualized tree data.\n   */\n  return useCallback(function () {\n    var cascade = options.cascade,\n      searchKeyword = options.searchKeyword,\n      expandItemValues = options.expandItemValues;\n    return UNSAFE_flattenTree(data, childrenKey, function (node) {\n      var formatted = {};\n      var curNode = nodes === null || nodes === void 0 ? void 0 : nodes[node.refKey];\n      var parentKeys = getNodeParentKeys(nodes, curNode, valueKey);\n      /**\n       * When using virtualized,\n       * if the parent node is collapsed, the child nodes should be hidden\n       * avoid component height calculation errors\n       */\n      var visible = curNode !== null && curNode !== void 0 && curNode.parent ? shouldShowNodeByParentExpanded(expandItemValues, parentKeys) : true;\n\n      /**\n       * when searching, every node default expand\n       * the node's visible should follow the original state\n       */\n      if (isSearching(searchKeyword)) {\n        visible = node.visible;\n      }\n      if (curNode) {\n        var checkState = !isUndefined(cascade) ? getNodeCheckState(curNode, {\n          cascade: cascade,\n          nodes: nodes,\n          childrenKey: childrenKey\n        }) : undefined;\n        formatted = _extends({}, node, {\n          check: curNode.check,\n          uncheckable: curNode.uncheckable,\n          hasChildren: !!node[childrenKey],\n          layer: curNode.layer,\n          parent: curNode.parent,\n          checkState: checkState,\n          visible: visible\n        });\n      }\n      return formatted;\n    });\n  }, [childrenKey, data, nodes, options, valueKey]);\n}\nexport default useVirtualizedTreeData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}