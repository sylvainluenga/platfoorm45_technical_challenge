{"ast":null,"code":"import { MixedType } from './MixedType';\nexport class BooleanType extends MixedType {\n  constructor(errorMessage) {\n    super('boolean');\n    super.pushRule({\n      onValid: v => typeof v === 'boolean',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n}\nexport default function getBooleanType(errorMessage) {\n  return new BooleanType(errorMessage);\n}","map":{"version":3,"names":["MixedType","BooleanType","constructor","errorMessage","pushRule","onValid","v","locale","type","getBooleanType"],"sources":["C:\\Users\\lenovo\\OneDrive\\Documents\\local project\\platfoorm45_technical_challenge\\node_modules\\schema-typed\\src\\BooleanType.ts"],"sourcesContent":["import { MixedType } from './MixedType';\nimport { ErrorMessageType } from './types';\nimport { BooleanTypeLocale } from './locales';\n\nexport class BooleanType<DataType = any, E = ErrorMessageType> extends MixedType<\n  boolean,\n  DataType,\n  E,\n  BooleanTypeLocale\n> {\n  constructor(errorMessage?: E | string) {\n    super('boolean');\n    super.pushRule({\n      onValid: v => typeof v === 'boolean',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n}\n\nexport default function getBooleanType<DataType = any, E = string>(errorMessage?: E) {\n  return new BooleanType<DataType, E>(errorMessage);\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AAIvC,OAAM,MAAOC,WAAkD,SAAQD,SAKtE;EACCE,YAAYC,YAAyB;IACnC,KAAK,CAAC,SAAS,CAAC;IAChB,KAAK,CAACC,QAAQ,CAAC;MACbC,OAAO,EAAEC,CAAC,IAAI,OAAOA,CAAC,KAAK,SAAS;MACpCH,YAAY,EAAEA,YAAY,IAAI,IAAI,CAACI,MAAM,CAACC;KAC3C,CAAC;EACJ;;AAGF,eAAc,SAAUC,cAAcA,CAA6BN,YAAgB;EACjF,OAAO,IAAIF,WAAW,CAAcE,YAAY,CAAC;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}