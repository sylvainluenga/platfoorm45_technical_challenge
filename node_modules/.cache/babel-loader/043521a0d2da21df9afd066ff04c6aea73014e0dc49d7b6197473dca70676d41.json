{"ast":null,"code":"'use client';\n\nimport { useRef } from 'react';\nimport isNil from 'lodash/isNil';\n\n/**\n * Custom hook that manages references to tree nodes. */\nexport default function useTreeNodeRefs() {\n  var treeNodeRefs = useRef({});\n  var saveTreeNodeRef = function saveTreeNodeRef(ref, refKey) {\n    if (!isNil(refKey)) {\n      treeNodeRefs.current[refKey] = ref;\n    }\n  };\n  return {\n    treeNodesRefs: treeNodeRefs.current,\n    saveTreeNodeRef: saveTreeNodeRef\n  };\n}","map":{"version":3,"names":["useRef","isNil","useTreeNodeRefs","treeNodeRefs","saveTreeNodeRef","ref","refKey","current","treeNodesRefs"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/Tree/hooks/useTreeNodeRefs.js"],"sourcesContent":["'use client';\nimport { useRef } from 'react';\nimport isNil from 'lodash/isNil';\n\n/**\n * Custom hook that manages references to tree nodes. */\nexport default function useTreeNodeRefs() {\n  var treeNodeRefs = useRef({});\n  var saveTreeNodeRef = function saveTreeNodeRef(ref, refKey) {\n    if (!isNil(refKey)) {\n      treeNodeRefs.current[refKey] = ref;\n    }\n  };\n  return {\n    treeNodesRefs: treeNodeRefs.current,\n    saveTreeNodeRef: saveTreeNodeRef\n  };\n}"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,KAAK,MAAM,cAAc;;AAEhC;AACA;AACA,eAAe,SAASC,eAAeA,CAAA,EAAG;EACxC,IAAIC,YAAY,GAAGH,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAII,eAAe,GAAG,SAASA,eAAeA,CAACC,GAAG,EAAEC,MAAM,EAAE;IAC1D,IAAI,CAACL,KAAK,CAACK,MAAM,CAAC,EAAE;MAClBH,YAAY,CAACI,OAAO,CAACD,MAAM,CAAC,GAAGD,GAAG;IACpC;EACF,CAAC;EACD,OAAO;IACLG,aAAa,EAAEL,YAAY,CAACI,OAAO;IACnCH,eAAe,EAAEA;EACnB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}