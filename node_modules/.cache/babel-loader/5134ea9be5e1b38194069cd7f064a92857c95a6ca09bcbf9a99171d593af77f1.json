{"ast":null,"code":"'use client';\n\nimport { useCallback, useEffect } from 'react';\nimport startCase from 'lodash/startCase';\nimport { addDays, addMonths, addYears, addHours, addMinutes, addSeconds, isLastDayOfMonth, lastDayOfMonth, isValid } from \"../../internals/utils/date/index.js\";\nimport { useCustom } from \"../../internals/hooks/index.js\";\nimport { useDateField, patternMap } from \"../DateField.js\";\nexport function useDateInputState(_ref) {\n  var formatStr = _ref.formatStr,\n    locale = _ref.locale,\n    date = _ref.date,\n    isControlledDate = _ref.isControlledDate;\n  var _useCustom = useCustom(),\n    formatDate = _useCustom.formatDate;\n  var _useDateField = useDateField(formatStr, locale.localize, date),\n    dateField = _useDateField.dateField,\n    dispatch = _useDateField.dispatch,\n    toDateString = _useDateField.toDateString,\n    toDate = _useDateField.toDate,\n    isEmptyValue = _useDateField.isEmptyValue;\n  var setDateOffset = function setDateOffset(pattern, offset, callback) {\n    var currentDate = new Date();\n    var year = dateField.year || currentDate.getFullYear();\n    var month = dateField.month ? dateField.month - 1 : currentDate.getMonth();\n    var day = dateField.day || 0;\n    var hour = dateField.hour || 0;\n    var minute = dateField.minute || 0;\n    var second = dateField.second || 0;\n    var actionName;\n    var value;\n    switch (pattern) {\n      case 'y':\n        actionName = 'setYear';\n        value = addYears(new Date(year, 0), offset).getFullYear();\n        break;\n      case 'M':\n        actionName = 'setMonth';\n        value = addMonths(new Date(year, month), offset).getMonth() + 1;\n        break;\n      case 'd':\n        actionName = 'setDay';\n        var prevDate = new Date(year, month, day);\n        value = addDays(prevDate, offset).getDate();\n        if (offset > 0) {\n          value = isLastDayOfMonth(prevDate) ? 1 : value;\n        } else {\n          value = prevDate.getDate() === 1 ? lastDayOfMonth(prevDate).getDate() : value;\n        }\n        break;\n      case 'H':\n      case 'h':\n        actionName = 'setHour';\n        value = addHours(new Date(year, month, day, hour), offset).getHours();\n        break;\n      case 'm':\n        actionName = 'setMinute';\n        value = addMinutes(new Date(year, month, day, hour, minute), offset).getMinutes();\n        break;\n      case 's':\n        actionName = 'setSecond';\n        value = addSeconds(new Date(year, month, day, hour, minute, second), offset).getSeconds();\n        break;\n      case 'a':\n        actionName = 'setHour';\n        value = hour >= 12 ? hour - 12 : hour + 12;\n        break;\n    }\n    if (actionName && value) {\n      dispatch({\n        type: actionName,\n        value: value\n      });\n      var field = patternMap[pattern];\n      callback === null || callback === void 0 ? void 0 : callback(toDate(field, value));\n    }\n  };\n  var setDateField = function setDateField(pattern, value, callback) {\n    var field = patternMap[pattern];\n    var actionName = \"set\" + startCase(field);\n    dispatch({\n      type: actionName,\n      value: value\n    });\n    callback === null || callback === void 0 ? void 0 : callback(toDate(field, value));\n  };\n  var getDateField = function getDateField(pattern) {\n    var fieldName = patternMap[pattern];\n    return {\n      name: fieldName,\n      value: dateField[fieldName]\n    };\n  };\n  var toControlledDateString = function toControlledDateString() {\n    if (date && isValid(date)) {\n      return formatDate(date, formatStr, {\n        locale: locale\n      });\n    }\n    // if date is not valid, return uncontrolled date string\n    return toDateString();\n  };\n  var setNewDate = useCallback(function (value) {\n    dispatch({\n      type: 'setNewDate',\n      value: value\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    if (isControlledDate) {\n      if (date && isValid(date)) {\n        setNewDate(date);\n      } else if (date === null) {\n        setNewDate(null);\n      }\n    }\n  }, [date, dispatch, isControlledDate, setNewDate]);\n  return {\n    dateField: dateField,\n    setDateOffset: setDateOffset,\n    setDateField: setDateField,\n    setNewDate: setNewDate,\n    getDateField: getDateField,\n    toDateString: isControlledDate ? toControlledDateString : toDateString,\n    isEmptyValue: isEmptyValue\n  };\n}\nexport default useDateInputState;","map":{"version":3,"names":["useCallback","useEffect","startCase","addDays","addMonths","addYears","addHours","addMinutes","addSeconds","isLastDayOfMonth","lastDayOfMonth","isValid","useCustom","useDateField","patternMap","useDateInputState","_ref","formatStr","locale","date","isControlledDate","_useCustom","formatDate","_useDateField","localize","dateField","dispatch","toDateString","toDate","isEmptyValue","setDateOffset","pattern","offset","callback","currentDate","Date","year","getFullYear","month","getMonth","day","hour","minute","second","actionName","value","prevDate","getDate","getHours","getMinutes","getSeconds","type","field","setDateField","getDateField","fieldName","name","toControlledDateString","setNewDate"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/DateInput/hooks/useDateInputState.js"],"sourcesContent":["'use client';\nimport { useCallback, useEffect } from 'react';\nimport startCase from 'lodash/startCase';\nimport { addDays, addMonths, addYears, addHours, addMinutes, addSeconds, isLastDayOfMonth, lastDayOfMonth, isValid } from \"../../internals/utils/date/index.js\";\nimport { useCustom } from \"../../internals/hooks/index.js\";\nimport { useDateField, patternMap } from \"../DateField.js\";\nexport function useDateInputState(_ref) {\n  var formatStr = _ref.formatStr,\n    locale = _ref.locale,\n    date = _ref.date,\n    isControlledDate = _ref.isControlledDate;\n  var _useCustom = useCustom(),\n    formatDate = _useCustom.formatDate;\n  var _useDateField = useDateField(formatStr, locale.localize, date),\n    dateField = _useDateField.dateField,\n    dispatch = _useDateField.dispatch,\n    toDateString = _useDateField.toDateString,\n    toDate = _useDateField.toDate,\n    isEmptyValue = _useDateField.isEmptyValue;\n  var setDateOffset = function setDateOffset(pattern, offset, callback) {\n    var currentDate = new Date();\n    var year = dateField.year || currentDate.getFullYear();\n    var month = dateField.month ? dateField.month - 1 : currentDate.getMonth();\n    var day = dateField.day || 0;\n    var hour = dateField.hour || 0;\n    var minute = dateField.minute || 0;\n    var second = dateField.second || 0;\n    var actionName;\n    var value;\n    switch (pattern) {\n      case 'y':\n        actionName = 'setYear';\n        value = addYears(new Date(year, 0), offset).getFullYear();\n        break;\n      case 'M':\n        actionName = 'setMonth';\n        value = addMonths(new Date(year, month), offset).getMonth() + 1;\n        break;\n      case 'd':\n        actionName = 'setDay';\n        var prevDate = new Date(year, month, day);\n        value = addDays(prevDate, offset).getDate();\n        if (offset > 0) {\n          value = isLastDayOfMonth(prevDate) ? 1 : value;\n        } else {\n          value = prevDate.getDate() === 1 ? lastDayOfMonth(prevDate).getDate() : value;\n        }\n        break;\n      case 'H':\n      case 'h':\n        actionName = 'setHour';\n        value = addHours(new Date(year, month, day, hour), offset).getHours();\n        break;\n      case 'm':\n        actionName = 'setMinute';\n        value = addMinutes(new Date(year, month, day, hour, minute), offset).getMinutes();\n        break;\n      case 's':\n        actionName = 'setSecond';\n        value = addSeconds(new Date(year, month, day, hour, minute, second), offset).getSeconds();\n        break;\n      case 'a':\n        actionName = 'setHour';\n        value = hour >= 12 ? hour - 12 : hour + 12;\n        break;\n    }\n    if (actionName && value) {\n      dispatch({\n        type: actionName,\n        value: value\n      });\n      var field = patternMap[pattern];\n      callback === null || callback === void 0 ? void 0 : callback(toDate(field, value));\n    }\n  };\n  var setDateField = function setDateField(pattern, value, callback) {\n    var field = patternMap[pattern];\n    var actionName = \"set\" + startCase(field);\n    dispatch({\n      type: actionName,\n      value: value\n    });\n    callback === null || callback === void 0 ? void 0 : callback(toDate(field, value));\n  };\n  var getDateField = function getDateField(pattern) {\n    var fieldName = patternMap[pattern];\n    return {\n      name: fieldName,\n      value: dateField[fieldName]\n    };\n  };\n  var toControlledDateString = function toControlledDateString() {\n    if (date && isValid(date)) {\n      return formatDate(date, formatStr, {\n        locale: locale\n      });\n    }\n    // if date is not valid, return uncontrolled date string\n    return toDateString();\n  };\n  var setNewDate = useCallback(function (value) {\n    dispatch({\n      type: 'setNewDate',\n      value: value\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    if (isControlledDate) {\n      if (date && isValid(date)) {\n        setNewDate(date);\n      } else if (date === null) {\n        setNewDate(null);\n      }\n    }\n  }, [date, dispatch, isControlledDate, setNewDate]);\n  return {\n    dateField: dateField,\n    setDateOffset: setDateOffset,\n    setDateField: setDateField,\n    setNewDate: setNewDate,\n    getDateField: getDateField,\n    toDateString: isControlledDate ? toControlledDateString : toDateString,\n    isEmptyValue: isEmptyValue\n  };\n}\nexport default useDateInputState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}