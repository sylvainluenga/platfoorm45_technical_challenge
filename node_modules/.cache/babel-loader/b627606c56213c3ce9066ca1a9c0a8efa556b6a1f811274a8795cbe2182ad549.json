{"ast":null,"code":"export default function pathTransform(path) {\n  const arr = path.split('.');\n  if (arr.length === 1) {\n    return path;\n  }\n  return path.split('.').map((item, index) => {\n    if (index === 0) {\n      return item;\n    }\n    // Check if the item is a number, e.g. `list.0`\n    return /^\\d+$/.test(item) ? `array.${item}` : `object.${item}`;\n  }).join('.');\n}","map":{"version":3,"names":["pathTransform","path","arr","split","length","map","item","index","test","join"],"sources":["C:\\Users\\lenovo\\OneDrive\\Documents\\local project\\platfoorm45_technical_challenge\\node_modules\\schema-typed\\src\\utils\\pathTransform.ts"],"sourcesContent":["export default function pathTransform(path: string) {\n  const arr = path.split('.');\n\n  if (arr.length === 1) {\n    return path;\n  }\n\n  return path\n    .split('.')\n    .map((item, index) => {\n      if (index === 0) {\n        return item;\n      }\n\n      // Check if the item is a number, e.g. `list.0`\n      return /^\\d+$/.test(item) ? `array.${item}` : `object.${item}`;\n    })\n    .join('.');\n}\n"],"mappings":"AAAA,eAAc,SAAUA,aAAaA,CAACC,IAAY;EAChD,MAAMC,GAAG,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;EAE3B,IAAID,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;IACpB,OAAOH,IAAI;;EAGb,OAAOA,IAAI,CACRE,KAAK,CAAC,GAAG,CAAC,CACVE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;IACnB,IAAIA,KAAK,KAAK,CAAC,EAAE;MACf,OAAOD,IAAI;;IAGb;IACA,OAAO,OAAO,CAACE,IAAI,CAACF,IAAI,CAAC,GAAG,SAASA,IAAI,EAAE,GAAG,UAAUA,IAAI,EAAE;EAChE,CAAC,CAAC,CACDG,IAAI,CAAC,GAAG,CAAC;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}