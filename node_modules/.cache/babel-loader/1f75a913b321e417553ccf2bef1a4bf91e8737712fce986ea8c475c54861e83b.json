{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useEffect, useState, useCallback, useRef, useMemo } from 'react';\nimport canUseDOM from 'dom-lib/canUseDOM';\nimport pick from 'lodash/pick';\nexport var mediaQuerySizeMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1400px)'\n};\n\n/**\n * The type of the query parameter.\n */\n\nvar matchMedia = function matchMedia(query) {\n  if (canUseDOM) {\n    return window.matchMedia(query);\n  }\n  return {\n    matches: false,\n    media: query\n  };\n};\n\n/**\n * React hook that tracks state of a CSS media query.\n * @see https://rsuitejs.com/components/use-media-query\n */\nexport function useMediaQueryOld(query) {\n  var queries = Array.isArray(query) ? query : [query];\n  var mediaQueries = useMemo(function () {\n    return queries.map(function (query) {\n      return mediaQuerySizeMap[query] || query;\n    });\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [].concat(queries));\n  var _useState = useState(function () {\n      return mediaQueries.map(function (query) {\n        return pick(matchMedia(query), ['matches', 'media']);\n      });\n    }),\n    mediaQueryArray = _useState[0],\n    setMediaQueryArray = _useState[1];\n  function handleChange(event) {\n    setMediaQueryArray(function (prevMediaQueryArray) {\n      return prevMediaQueryArray.map(function (item) {\n        return item.media === event.media ? _extends({}, item, {\n          matches: event.matches\n        }) : item;\n      });\n    });\n  }\n  useEffect(function () {\n    var mediaQueryList = mediaQueries.map(function (query) {\n      return matchMedia(query);\n    });\n    mediaQueryList.forEach(function (query) {\n      query.addEventListener('change', handleChange);\n    });\n    return function () {\n      mediaQueryList.forEach(function (query) {\n        query.removeEventListener('change', handleChange);\n      });\n    };\n  }, [mediaQueries]);\n  return mediaQueryArray.map(function (query) {\n    return query.matches;\n  });\n}\n\n/**\n * React hook that tracks state of a CSS media query\n * @version 5.48.0\n * @unstable Please note that this API is not stable and may change in the future.\n * @see https://rsuitejs.com/components/use-media-query\n */\nexport function useMediaQuery(query) {\n  var _React$useSyncExterna;\n  var queries = Array.isArray(query) ? query : [query];\n  var mediaQueries = useMemo(function () {\n    return queries.map(function (query) {\n      return mediaQuerySizeMap[query] || query;\n    });\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [].concat(queries));\n  var mediaQueryArray = useRef(mediaQueries.map(function (query) {\n    return matchMedia(query).matches;\n  }));\n  var subscribe = useCallback(function (callback) {\n    var list = mediaQueries.map(function (query) {\n      return matchMedia(query);\n    });\n    var handleChange = function handleChange(event) {\n      var index = list.findIndex(function (item) {\n        return item.media === event.media;\n      });\n      if (index !== -1) {\n        // The store snapshot returned by getSnapshot must be immutable. So we need to create a new array.\n        var nextMediaQueryArray = mediaQueryArray.current.slice();\n        nextMediaQueryArray[index] = event.matches;\n        mediaQueryArray.current = nextMediaQueryArray;\n      }\n      callback();\n    };\n    list.forEach(function (query) {\n      query.addEventListener('change', handleChange);\n    });\n    return function () {\n      list.forEach(function (query) {\n        query.removeEventListener('change', handleChange);\n      });\n    };\n  }, [mediaQueries]);\n  var getSnapshot = useCallback(function () {\n    return mediaQueryArray.current;\n  }, []);\n  var getServerSnapshot = useCallback(function () {\n    return mediaQueryArray.current;\n  }, []);\n  return (_React$useSyncExterna = React['useSyncExternalStore']) === null || _React$useSyncExterna === void 0 ? void 0 : _React$useSyncExterna.call(React, subscribe, getSnapshot, getServerSnapshot);\n}\nexport default typeof React['useSyncExternalStore'] === 'function' ? useMediaQuery : useMediaQueryOld;","map":{"version":3,"names":["_extends","React","useEffect","useState","useCallback","useRef","useMemo","canUseDOM","pick","mediaQuerySizeMap","xs","sm","md","lg","xl","xxl","matchMedia","query","window","matches","media","useMediaQueryOld","queries","Array","isArray","mediaQueries","map","concat","_useState","mediaQueryArray","setMediaQueryArray","handleChange","event","prevMediaQueryArray","item","mediaQueryList","forEach","addEventListener","removeEventListener","useMediaQuery","_React$useSyncExterna","subscribe","callback","list","index","findIndex","nextMediaQueryArray","current","slice","getSnapshot","getServerSnapshot","call"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/useMediaQuery/useMediaQuery.js"],"sourcesContent":["'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useEffect, useState, useCallback, useRef, useMemo } from 'react';\nimport canUseDOM from 'dom-lib/canUseDOM';\nimport pick from 'lodash/pick';\nexport var mediaQuerySizeMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1400px)'\n};\n\n/**\n * The type of the query parameter.\n */\n\nvar matchMedia = function matchMedia(query) {\n  if (canUseDOM) {\n    return window.matchMedia(query);\n  }\n  return {\n    matches: false,\n    media: query\n  };\n};\n\n/**\n * React hook that tracks state of a CSS media query.\n * @see https://rsuitejs.com/components/use-media-query\n */\nexport function useMediaQueryOld(query) {\n  var queries = Array.isArray(query) ? query : [query];\n  var mediaQueries = useMemo(function () {\n    return queries.map(function (query) {\n      return mediaQuerySizeMap[query] || query;\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [].concat(queries));\n  var _useState = useState(function () {\n      return mediaQueries.map(function (query) {\n        return pick(matchMedia(query), ['matches', 'media']);\n      });\n    }),\n    mediaQueryArray = _useState[0],\n    setMediaQueryArray = _useState[1];\n  function handleChange(event) {\n    setMediaQueryArray(function (prevMediaQueryArray) {\n      return prevMediaQueryArray.map(function (item) {\n        return item.media === event.media ? _extends({}, item, {\n          matches: event.matches\n        }) : item;\n      });\n    });\n  }\n  useEffect(function () {\n    var mediaQueryList = mediaQueries.map(function (query) {\n      return matchMedia(query);\n    });\n    mediaQueryList.forEach(function (query) {\n      query.addEventListener('change', handleChange);\n    });\n    return function () {\n      mediaQueryList.forEach(function (query) {\n        query.removeEventListener('change', handleChange);\n      });\n    };\n  }, [mediaQueries]);\n  return mediaQueryArray.map(function (query) {\n    return query.matches;\n  });\n}\n\n/**\n * React hook that tracks state of a CSS media query\n * @version 5.48.0\n * @unstable Please note that this API is not stable and may change in the future.\n * @see https://rsuitejs.com/components/use-media-query\n */\nexport function useMediaQuery(query) {\n  var _React$useSyncExterna;\n  var queries = Array.isArray(query) ? query : [query];\n  var mediaQueries = useMemo(function () {\n    return queries.map(function (query) {\n      return mediaQuerySizeMap[query] || query;\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [].concat(queries));\n  var mediaQueryArray = useRef(mediaQueries.map(function (query) {\n    return matchMedia(query).matches;\n  }));\n  var subscribe = useCallback(function (callback) {\n    var list = mediaQueries.map(function (query) {\n      return matchMedia(query);\n    });\n    var handleChange = function handleChange(event) {\n      var index = list.findIndex(function (item) {\n        return item.media === event.media;\n      });\n      if (index !== -1) {\n        // The store snapshot returned by getSnapshot must be immutable. So we need to create a new array.\n        var nextMediaQueryArray = mediaQueryArray.current.slice();\n        nextMediaQueryArray[index] = event.matches;\n        mediaQueryArray.current = nextMediaQueryArray;\n      }\n      callback();\n    };\n    list.forEach(function (query) {\n      query.addEventListener('change', handleChange);\n    });\n    return function () {\n      list.forEach(function (query) {\n        query.removeEventListener('change', handleChange);\n      });\n    };\n  }, [mediaQueries]);\n  var getSnapshot = useCallback(function () {\n    return mediaQueryArray.current;\n  }, []);\n  var getServerSnapshot = useCallback(function () {\n    return mediaQueryArray.current;\n  }, []);\n  return (_React$useSyncExterna = React['useSyncExternalStore']) === null || _React$useSyncExterna === void 0 ? void 0 : _React$useSyncExterna.call(React, subscribe, getSnapshot, getServerSnapshot);\n}\nexport default typeof React['useSyncExternalStore'] === 'function' ? useMediaQuery : useMediaQueryOld;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}