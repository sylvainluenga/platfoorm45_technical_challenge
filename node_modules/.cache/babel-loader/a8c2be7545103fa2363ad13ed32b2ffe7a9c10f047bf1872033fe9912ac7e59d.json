{"ast":null,"code":"'use client';\n\nimport { useCallback } from 'react';\nimport isNil from 'lodash/isNil';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useEventCallback } from \"../../internals/hooks/index.js\";\nimport { useItemDataKeys } from \"../../internals/Tree/TreeProvider.js\";\nimport { isEveryChildChecked } from \"../utils.js\";\nfunction useTreeCheckState(props) {\n  var cascade = props.cascade,\n    flattenedNodes = props.flattenedNodes,\n    uncheckableItemValues = props.uncheckableItemValues;\n  var _useItemDataKeys = useItemDataKeys(),\n    valueKey = _useItemDataKeys.valueKey,\n    childrenKey = _useItemDataKeys.childrenKey;\n  var checkParentNode = useEventCallback(function (nodes, node, checked) {\n    var currentNode = node.refKey ? nodes[node.refKey] : null;\n    if (cascade && currentNode) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(currentNode, {\n          nodes: nodes,\n          childrenKey: childrenKey\n        })) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n      if (currentNode.parent) {\n        checkParentNode(nodes, currentNode.parent, checked);\n      }\n    }\n  });\n  var checkChildNode = useEventCallback(function (nodes, node, isChecked) {\n    var currentNode = node.refKey ? nodes[node.refKey] : null;\n    if (!currentNode) {\n      return;\n    }\n    currentNode.check = isChecked;\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        checkChildNode(nodes, child, isChecked);\n      });\n    }\n  });\n  var getCheckedValuesByParent = useCallback(function (nodes) {\n    var values = [];\n    for (var key in nodes) {\n      var currentNode = nodes[key];\n      if (!isNil(currentNode.parent) && !isNil(currentNode.parent.refKey)) {\n        var parentNode = nodes[currentNode.parent.refKey];\n        if (currentNode.check) {\n          if (!(parentNode !== null && parentNode !== void 0 && parentNode.checkAll)) {\n            values.push(currentNode[valueKey]);\n          } else if (parentNode !== null && parentNode !== void 0 && parentNode.uncheckable) {\n            values.push(currentNode[valueKey]);\n          }\n        }\n      } else if (currentNode.check) {\n        values.push(currentNode[valueKey]);\n      }\n    }\n    return values;\n  }, [valueKey]);\n  var getCheckedValues = useEventCallback(function (node, isChecked) {\n    var nodes = cloneDeep(flattenedNodes);\n    checkChildNode(nodes, node, isChecked);\n    if (node.parent) {\n      checkParentNode(nodes, node.parent, isChecked);\n    }\n    var values = getCheckedValuesByParent(nodes);\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  });\n  return {\n    getCheckedValues: getCheckedValues\n  };\n}\nexport default useTreeCheckState;","map":{"version":3,"names":["useCallback","isNil","cloneDeep","useEventCallback","useItemDataKeys","isEveryChildChecked","useTreeCheckState","props","cascade","flattenedNodes","uncheckableItemValues","_useItemDataKeys","valueKey","childrenKey","checkParentNode","nodes","node","checked","currentNode","refKey","check","checkAll","parent","checkChildNode","isChecked","length","forEach","child","getCheckedValuesByParent","values","key","parentNode","push","uncheckable","getCheckedValues","filter","v","includes"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/CheckTree/hooks/useTreeCheckState.js"],"sourcesContent":["'use client';\nimport { useCallback } from 'react';\nimport isNil from 'lodash/isNil';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useEventCallback } from \"../../internals/hooks/index.js\";\nimport { useItemDataKeys } from \"../../internals/Tree/TreeProvider.js\";\nimport { isEveryChildChecked } from \"../utils.js\";\nfunction useTreeCheckState(props) {\n  var cascade = props.cascade,\n    flattenedNodes = props.flattenedNodes,\n    uncheckableItemValues = props.uncheckableItemValues;\n  var _useItemDataKeys = useItemDataKeys(),\n    valueKey = _useItemDataKeys.valueKey,\n    childrenKey = _useItemDataKeys.childrenKey;\n  var checkParentNode = useEventCallback(function (nodes, node, checked) {\n    var currentNode = node.refKey ? nodes[node.refKey] : null;\n    if (cascade && currentNode) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(currentNode, {\n          nodes: nodes,\n          childrenKey: childrenKey\n        })) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n      if (currentNode.parent) {\n        checkParentNode(nodes, currentNode.parent, checked);\n      }\n    }\n  });\n  var checkChildNode = useEventCallback(function (nodes, node, isChecked) {\n    var currentNode = node.refKey ? nodes[node.refKey] : null;\n    if (!currentNode) {\n      return;\n    }\n    currentNode.check = isChecked;\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        checkChildNode(nodes, child, isChecked);\n      });\n    }\n  });\n  var getCheckedValuesByParent = useCallback(function (nodes) {\n    var values = [];\n    for (var key in nodes) {\n      var currentNode = nodes[key];\n      if (!isNil(currentNode.parent) && !isNil(currentNode.parent.refKey)) {\n        var parentNode = nodes[currentNode.parent.refKey];\n        if (currentNode.check) {\n          if (!(parentNode !== null && parentNode !== void 0 && parentNode.checkAll)) {\n            values.push(currentNode[valueKey]);\n          } else if (parentNode !== null && parentNode !== void 0 && parentNode.uncheckable) {\n            values.push(currentNode[valueKey]);\n          }\n        }\n      } else if (currentNode.check) {\n        values.push(currentNode[valueKey]);\n      }\n    }\n    return values;\n  }, [valueKey]);\n  var getCheckedValues = useEventCallback(function (node, isChecked) {\n    var nodes = cloneDeep(flattenedNodes);\n    checkChildNode(nodes, node, isChecked);\n    if (node.parent) {\n      checkParentNode(nodes, node.parent, isChecked);\n    }\n    var values = getCheckedValuesByParent(nodes);\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  });\n  return {\n    getCheckedValues: getCheckedValues\n  };\n}\nexport default useTreeCheckState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}