{"ast":null,"code":"'use client';\n\n/**\n * Calculate columns to be displayed:\n *\n * - Every ancestor level of activeItem should be displayed\n * - The level that activeItem is at should be displayed\n * - If activeItem is a parent node, its child level should be displayed\n *\n * @param items\n * @param value\n * @param options\n * @returns\n */\nexport function getColumnsAndPaths(items, pathTarget, options) {\n  var getParent = options.getParent,\n    getChildren = options.getChildren;\n  if (!pathTarget) {\n    return {\n      columns: [items],\n      path: []\n    };\n  }\n  var columns = [];\n  var path = [pathTarget];\n  var children = getChildren(pathTarget);\n  if (children && children.length > 0) {\n    columns.unshift(children);\n  }\n  for (var parent = getParent(pathTarget); !!parent; parent = getParent(parent)) {\n    var _getChildren;\n    columns.unshift((_getChildren = getChildren(parent)) !== null && _getChildren !== void 0 ? _getChildren : []);\n    path.unshift(parent);\n  }\n  columns.unshift(items);\n  return {\n    columns: columns,\n    path: path\n  };\n}","map":{"version":3,"names":["getColumnsAndPaths","items","pathTarget","options","getParent","getChildren","columns","path","children","length","unshift","parent","_getChildren"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/CascadeTree/utils.js"],"sourcesContent":["'use client';\n/**\n * Calculate columns to be displayed:\n *\n * - Every ancestor level of activeItem should be displayed\n * - The level that activeItem is at should be displayed\n * - If activeItem is a parent node, its child level should be displayed\n *\n * @param items\n * @param value\n * @param options\n * @returns\n */\nexport function getColumnsAndPaths(items, pathTarget, options) {\n  var getParent = options.getParent,\n    getChildren = options.getChildren;\n  if (!pathTarget) {\n    return {\n      columns: [items],\n      path: []\n    };\n  }\n  var columns = [];\n  var path = [pathTarget];\n  var children = getChildren(pathTarget);\n  if (children && children.length > 0) {\n    columns.unshift(children);\n  }\n  for (var parent = getParent(pathTarget); !!parent; parent = getParent(parent)) {\n    var _getChildren;\n    columns.unshift((_getChildren = getChildren(parent)) !== null && _getChildren !== void 0 ? _getChildren : []);\n    path.unshift(parent);\n  }\n  columns.unshift(items);\n  return {\n    columns: columns,\n    path: path\n  };\n}"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,kBAAkBA,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAE;EAC7D,IAAIC,SAAS,GAAGD,OAAO,CAACC,SAAS;IAC/BC,WAAW,GAAGF,OAAO,CAACE,WAAW;EACnC,IAAI,CAACH,UAAU,EAAE;IACf,OAAO;MACLI,OAAO,EAAE,CAACL,KAAK,CAAC;MAChBM,IAAI,EAAE;IACR,CAAC;EACH;EACA,IAAID,OAAO,GAAG,EAAE;EAChB,IAAIC,IAAI,GAAG,CAACL,UAAU,CAAC;EACvB,IAAIM,QAAQ,GAAGH,WAAW,CAACH,UAAU,CAAC;EACtC,IAAIM,QAAQ,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IACnCH,OAAO,CAACI,OAAO,CAACF,QAAQ,CAAC;EAC3B;EACA,KAAK,IAAIG,MAAM,GAAGP,SAAS,CAACF,UAAU,CAAC,EAAE,CAAC,CAACS,MAAM,EAAEA,MAAM,GAAGP,SAAS,CAACO,MAAM,CAAC,EAAE;IAC7E,IAAIC,YAAY;IAChBN,OAAO,CAACI,OAAO,CAAC,CAACE,YAAY,GAAGP,WAAW,CAACM,MAAM,CAAC,MAAM,IAAI,IAAIC,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAG,EAAE,CAAC;IAC7GL,IAAI,CAACG,OAAO,CAACC,MAAM,CAAC;EACtB;EACAL,OAAO,CAACI,OAAO,CAACT,KAAK,CAAC;EACtB,OAAO;IACLK,OAAO,EAAEA,OAAO;IAChBC,IAAI,EAAEA;EACR,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}