{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useCallback } from 'react';\n/**\n * A hook for controlled value management.\n * In the case of passing the controlled value, the controlled value is returned, otherwise the value in state is returned.\n * Generally used for a component including controlled and uncontrolled modes.\n * @param controlledValue\n * @param defaultValue\n * @param formatValue\n */\n\nexport function useControlled(controlledValue, defaultValue) {\n  var controlledRef = useRef(false);\n  controlledRef.current = controlledValue !== undefined;\n  var _useState = useState(defaultValue),\n    uncontrolledValue = _useState[0],\n    setUncontrolledValue = _useState[1];\n\n  // If it is controlled, this directly returns the attribute value.\n  var value = controlledRef.current ? controlledValue : uncontrolledValue;\n  var setValue = useCallback(function (nextValue) {\n    // Only update the value in state when it is not under control.\n    if (!controlledRef.current) {\n      setUncontrolledValue(nextValue);\n    }\n  }, [controlledRef]);\n  return [value, setValue, controlledRef.current];\n}\nexport default useControlled;","map":{"version":3,"names":["useRef","useState","useCallback","useControlled","controlledValue","defaultValue","controlledRef","current","undefined","_useState","uncontrolledValue","setUncontrolledValue","value","setValue","nextValue"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/internals/hooks/useControlled.js"],"sourcesContent":["'use client';\nimport { useRef, useState, useCallback } from 'react';\n/**\n * A hook for controlled value management.\n * In the case of passing the controlled value, the controlled value is returned, otherwise the value in state is returned.\n * Generally used for a component including controlled and uncontrolled modes.\n * @param controlledValue\n * @param defaultValue\n * @param formatValue\n */\n\nexport function useControlled(controlledValue, defaultValue) {\n  var controlledRef = useRef(false);\n  controlledRef.current = controlledValue !== undefined;\n  var _useState = useState(defaultValue),\n    uncontrolledValue = _useState[0],\n    setUncontrolledValue = _useState[1];\n\n  // If it is controlled, this directly returns the attribute value.\n  var value = controlledRef.current ? controlledValue : uncontrolledValue;\n  var setValue = useCallback(function (nextValue) {\n    // Only update the value in state when it is not under control.\n    if (!controlledRef.current) {\n      setUncontrolledValue(nextValue);\n    }\n  }, [controlledRef]);\n  return [value, setValue, controlledRef.current];\n}\nexport default useControlled;"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,aAAaA,CAACC,eAAe,EAAEC,YAAY,EAAE;EAC3D,IAAIC,aAAa,GAAGN,MAAM,CAAC,KAAK,CAAC;EACjCM,aAAa,CAACC,OAAO,GAAGH,eAAe,KAAKI,SAAS;EACrD,IAAIC,SAAS,GAAGR,QAAQ,CAACI,YAAY,CAAC;IACpCK,iBAAiB,GAAGD,SAAS,CAAC,CAAC,CAAC;IAChCE,oBAAoB,GAAGF,SAAS,CAAC,CAAC,CAAC;;EAErC;EACA,IAAIG,KAAK,GAAGN,aAAa,CAACC,OAAO,GAAGH,eAAe,GAAGM,iBAAiB;EACvE,IAAIG,QAAQ,GAAGX,WAAW,CAAC,UAAUY,SAAS,EAAE;IAC9C;IACA,IAAI,CAACR,aAAa,CAACC,OAAO,EAAE;MAC1BI,oBAAoB,CAACG,SAAS,CAAC;IACjC;EACF,CAAC,EAAE,CAACR,aAAa,CAAC,CAAC;EACnB,OAAO,CAACM,KAAK,EAAEC,QAAQ,EAAEP,aAAa,CAACC,OAAO,CAAC;AACjD;AACA,eAAeJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}