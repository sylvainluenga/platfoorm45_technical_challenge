{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"maxHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n  _excluded2 = [\"depth\", \"rowIndex\"],\n  _excluded3 = [\"cellHeight\"];\nimport React, { useRef, useCallback, useImperativeHandle, useReducer, useMemo } from 'react';\nimport * as ReactIs from 'react-is';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport Cell from './Cell';\nimport HeaderCell from './HeaderCell';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, TREE_DEPTH, ROW_HEADER_HEIGHT, ROW_HEIGHT } from './constants';\nimport { mergeCells, isRTL, findRowKeys, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, useTableData, isSupportTouchEvent } from './utils';\nimport { flattenChildren } from './utils/children';\nvar DATA_PLACEHOLDER = [];\nvar getChildrenProps = {\n  Cell: Cell,\n  HeaderCell: HeaderCell,\n  Column: Column,\n  ColumnGroup: ColumnGroup\n};\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n    getChildren = props.children,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n    className = props.className,\n    _props$data = props.data,\n    dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n    _props$defaultSortTyp = props.defaultSortType,\n    defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n    widthProp = props.width,\n    expandedRowKeysProp = props.expandedRowKeys,\n    defaultExpandAllRows = props.defaultExpandAllRows,\n    defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n    style = props.style,\n    id = props.id,\n    isTree = props.isTree,\n    _props$hover = props.hover,\n    hover = _props$hover === void 0 ? true : _props$hover,\n    bordered = props.bordered,\n    cellBordered = props.cellBordered,\n    wordWrap = props.wordWrap,\n    loading = props.loading,\n    _props$locale = props.locale,\n    locale = _props$locale === void 0 ? {\n      emptyMessage: 'No data found',\n      loading: 'Loading...'\n    } : _props$locale,\n    _props$showHeader = props.showHeader,\n    showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n    sortColumn = props.sortColumn,\n    _props$rowHeight = props.rowHeight,\n    rowHeight = _props$rowHeight === void 0 ? ROW_HEIGHT : _props$rowHeight,\n    sortTypeProp = props.sortType,\n    _props$headerHeight = props.headerHeight,\n    headerHeightProp = _props$headerHeight === void 0 ? ROW_HEADER_HEIGHT : _props$headerHeight,\n    _props$minHeight = props.minHeight,\n    minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n    maxHeight = props.maxHeight,\n    _props$height = props.height,\n    height = _props$height === void 0 ? 200 : _props$height,\n    autoHeight = props.autoHeight,\n    fillHeight = props.fillHeight,\n    rtlProp = props.rtl,\n    translate3d = props.translate3d,\n    rowKey = props.rowKey,\n    virtualized = props.virtualized,\n    rowClassName = props.rowClassName,\n    _props$rowExpandedHei = props.rowExpandedHeight,\n    rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n    disabledScroll = props.disabledScroll,\n    affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n    loadAnimation = props.loadAnimation,\n    _props$shouldUpdateSc = props.shouldUpdateScroll,\n    shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n    renderRowProp = props.renderRow,\n    renderRowExpandedProp = props.renderRowExpanded,\n    renderLoading = props.renderLoading,\n    renderEmpty = props.renderEmpty,\n    onSortColumn = props.onSortColumn,\n    onScroll = props.onScroll,\n    renderTreeToggle = props.renderTreeToggle,\n    onRowClick = props.onRowClick,\n    onRowContextMenu = props.onRowContextMenu,\n    onExpandChange = props.onExpandChange,\n    onTouchStart = props.onTouchStart,\n    onTouchMove = props.onTouchMove,\n    onTouchEnd = props.onTouchEnd,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var children = useMemo(function () {\n    return flattenChildren(isFunction(getChildren) ? getChildren(getChildrenProps) : getChildren);\n  }, [getChildren]);\n  var isAutoHeight = useMemo(function () {\n    return autoHeight && !maxHeight;\n  }, [autoHeight, maxHeight]);\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    mergeCls = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n\n  // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n  var _useReducer = useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    forceUpdate = _useReducer[1];\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n    expandedRowKeys = _useControlled[0],\n    setExpandedRowKeys = _useControlled[1];\n  var data = useTableData({\n    data: dataProp,\n    isTree: isTree,\n    expandedRowKeys: expandedRowKeys,\n    rowKey: rowKey\n  });\n  if (isTree) {\n    if (!rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    } else if (data.length > 0) {\n      if (!data[0].hasOwnProperty(rowKey)) {\n        throw new Error('The `rowKey` is not found in data');\n      }\n    }\n  }\n  var _useTableRows = useTableRows({\n      data: dataProp,\n      expandedRowKeys: expandedRowKeys,\n      wordWrap: wordWrap,\n      prefix: prefix\n    }),\n    tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n    bindTableRowsRef = _useTableRows.bindTableRowsRef;\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n  var getRowHeight = function getRowHeight() {\n    return typeof rowHeight === 'function' ? rowHeight() : rowHeight;\n  };\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  }));\n\n  // Check for the existence of fixed columns in all column properties.\n  var shouldFixedColumn = children.some(function (child) {\n    var _child$props;\n    return ReactIs.isElement(child) && (child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed);\n  });\n\n  // Check all column properties for the existence of rowSpan.\n  var shouldRowSpanColumn = children.some(function (child) {\n    var _child$props2;\n    return ReactIs.isElement(child) && (child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan);\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n    if (event === 'bodyWidthChanged') {\n      deferUpdatePosition();\n    }\n  };\n  var _useTableDimension = useTableDimension({\n      // The data should be flattened,\n      // otherwise the array length required to calculate the scroll height in the TreeTable is not real.\n      data: data,\n      width: widthProp,\n      rowHeight: rowHeight,\n      tableRef: tableRef,\n      headerWrapperRef: headerWrapperRef,\n      prefix: prefix,\n      affixHeader: affixHeader,\n      affixHorizontalScrollbar: affixHorizontalScrollbar,\n      headerHeight: headerHeight,\n      height: height,\n      minHeight: minHeight,\n      maxHeight: maxHeight,\n      autoHeight: autoHeight,\n      fillHeight: fillHeight,\n      children: children,\n      expandedRowKeys: expandedRowKeys,\n      showHeader: showHeader,\n      bordered: bordered,\n      onTableScroll: debounce(function (coords) {\n        return onScrollTo(coords);\n      }, 100),\n      onTableResizeChange: handleTableResizeChange\n    }),\n    contentHeight = _useTableDimension.contentHeight,\n    contentWidth = _useTableDimension.contentWidth,\n    minScrollY = _useTableDimension.minScrollY,\n    minScrollX = _useTableDimension.minScrollX,\n    scrollY = _useTableDimension.scrollY,\n    scrollX = _useTableDimension.scrollX,\n    tableWidth = _useTableDimension.tableWidth,\n    tableOffset = _useTableDimension.tableOffset,\n    headerOffset = _useTableDimension.headerOffset,\n    setScrollY = _useTableDimension.setScrollY,\n    setScrollX = _useTableDimension.setScrollX,\n    getTableHeight = _useTableDimension.getTableHeight;\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n  var _usePosition = usePosition({\n      data: dataProp,\n      height: height,\n      tableWidth: tableWidth,\n      tableRef: tableRef,\n      prefix: prefix,\n      translateDOMPositionXY: translateDOMPositionXY,\n      wheelWrapperRef: wheelWrapperRef,\n      headerWrapperRef: headerWrapperRef,\n      affixHeaderWrapperRef: affixHeaderWrapperRef,\n      tableHeaderRef: tableHeaderRef,\n      scrollX: scrollX,\n      scrollY: scrollY,\n      contentWidth: contentWidth,\n      shouldFixedColumn: shouldFixedColumn\n    }),\n    forceUpdatePosition = _usePosition.forceUpdatePosition,\n    deferUpdatePosition = _usePosition.deferUpdatePosition;\n  var _useScrollListener = useScrollListener({\n      rtl: rtl,\n      data: dataProp,\n      height: height,\n      virtualized: virtualized,\n      getTableHeight: getTableHeight,\n      contentHeight: contentHeight,\n      headerHeight: headerHeight,\n      autoHeight: isAutoHeight,\n      maxHeight: maxHeight,\n      tableBodyRef: tableBodyRef,\n      scrollbarXRef: scrollbarXRef,\n      scrollbarYRef: scrollbarYRef,\n      disabledScroll: disabledScroll,\n      loading: loading,\n      tableRef: tableRef,\n      contentWidth: contentWidth,\n      tableWidth: tableWidth,\n      scrollY: scrollY,\n      minScrollY: minScrollY,\n      minScrollX: minScrollX,\n      scrollX: scrollX,\n      setScrollX: setScrollX,\n      setScrollY: setScrollY,\n      forceUpdatePosition: forceUpdatePosition,\n      deferUpdatePosition: deferUpdatePosition,\n      onScroll: onScroll,\n      onTouchStart: onTouchStart,\n      onTouchMove: onTouchMove,\n      onTouchEnd: onTouchEnd\n    }),\n    isScrolling = _useScrollListener.isScrolling,\n    onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n    onScrollVertical = _useScrollListener.onScrollVertical,\n    onScrollBody = _useScrollListener.onScrollBody,\n    onScrollTop = _useScrollListener.onScrollTop,\n    onScrollLeft = _useScrollListener.onScrollLeft,\n    onScrollTo = _useScrollListener.onScrollTo,\n    onScrollByKeydown = _useScrollListener.onScrollByKeydown;\n  var _useCellDescriptor = useCellDescriptor({\n      children: children,\n      rtl: rtl,\n      mouseAreaRef: mouseAreaRef,\n      tableRef: tableRef,\n      minScrollX: minScrollX,\n      scrollX: scrollX,\n      tableWidth: tableWidth,\n      headerHeight: headerHeight,\n      showHeader: showHeader,\n      sortType: sortTypeProp,\n      defaultSortType: defaultSortType,\n      sortColumn: sortColumn,\n      prefix: prefix,\n      onSortColumn: onSortColumn,\n      // Force table update after column width change, so scrollbar re-renders.\n      onHeaderCellResize: forceUpdate,\n      rowHeight: rowHeight\n    }),\n    headerCells = _useCellDescriptor.headerCells,\n    bodyCells = _useCellDescriptor.bodyCells,\n    allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n    hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n      get body() {\n        return wheelWrapperRef.current;\n      },\n      // The scroll position of the table\n      get scrollPosition() {\n        return {\n          top: Math.abs(scrollY.current),\n          left: Math.abs(scrollX.current)\n        };\n      },\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current;\n\n  // Whether to show vertical scroll bar\n  var hasVerticalScrollbar = !isAutoHeight && contentHeight.current > getTableHeight() - headerHeight;\n\n  // Whether to show the horizontal scroll bar\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    loading: loading,\n    treetable: isTree,\n    hover: hover && !shouldRowSpanColumn,\n    'has-rowspan': shouldRowSpanColumn,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n  var renderRowExpanded = useCallback(function (rowData) {\n    var height = 0;\n    if (typeof rowExpandedHeight === 'function') {\n      height = rowExpandedHeight(rowData);\n    } else {\n      height = rowExpandedHeight;\n    }\n    var styles = {\n      height: height\n    };\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n      rowIndex = props.rowIndex,\n      restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData, rowIndex);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n    var rowRight = 0;\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n    var rowNode = null;\n\n    // IF there are fixed columns, add a fixed group\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n          fixed = _cell$props.fixed,\n          width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0,\n      rowIndex: -1\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    };\n\n    // Affix header\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n  var rowSpanState = useRef({});\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n    var cellHeight = props.cellHeight,\n      restRowProps = _objectWithoutPropertiesLoose(props, _excluded3);\n    var rowProps = _extends({}, restRowProps, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _cell$props3, _rowSpanState$current, _cell$props4, _rowSpanState$current2;\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = (_cell$props3 = _cell$props2).rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props3, rowData);\n      var dataCellHeight = rowSpan ? rowSpan * (cellHeight || ROW_HEIGHT) : cellHeight;\n      var _cellKey = cell.props.dataKey || i;\n\n      // Record the cell state of the merged row\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1;\n\n        // Restart counting when merged to the last cell.\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      }\n\n      // Cells marked as deleted when checking for merged cell.\n      var removedCell = (_cell$props4 = cell.props) !== null && _cell$props4 !== void 0 && _cell$props4.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push(/*#__PURE__*/React.cloneElement(cell, {\n        'aria-rowspan': rowSpan ? rowSpan : undefined,\n        hasChildren: hasChildren,\n        rowData: rowData,\n        rowIndex: props.rowIndex,\n        wordWrap: wordWrap,\n        height: dataCellHeight,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n    if (disabledScroll) {\n      return null;\n    }\n    var scrollbars = [];\n    if (hasHorizontalScrollbar) {\n      scrollbars.push(/*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n    if (hasVerticalScrollbar) {\n      scrollbars.push(/*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n    return scrollbars;\n  };\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n    if (data) {\n      var top = 0; // Row position\n      var minTop = Math.abs(scrollY.current);\n      var startHeight = 0;\n      if (typeof rowExpandedHeight === 'function') {\n        startHeight = data.length ? rowExpandedHeight(data[0]) : 100;\n      } else {\n        startHeight = rowExpandedHeight;\n      }\n      var maxTop = minTop + height + startHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap;\n\n      // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n        for (var index = 0; index < data.length; index++) {\n          var rowData = data[index];\n          var _maxHeight = tableRowsMaxHeight[index];\n          var expandedRow = shouldRenderExpandedRow(rowData);\n          var nextRowHeight = 0;\n          var cellHeight = 0;\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(rowData);\n            cellHeight = nextRowHeight;\n          } else {\n            nextRowHeight = _maxHeight ? Math.max(_maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n            cellHeight = nextRowHeight;\n            if (expandedRow) {\n              // If the row is expanded, the height of the expanded row is added.\n              if (typeof rowExpandedHeight === 'function') {\n                nextRowHeight += rowExpandedHeight(rowData);\n              } else {\n                nextRowHeight += rowExpandedHeight;\n              }\n            }\n          }\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: top,\n            rowIndex: index,\n            width: rowWidth,\n            depth: rowData[TREE_DEPTH],\n            height: nextRowHeight,\n            cellHeight: cellHeight\n          };\n          top += nextRowHeight;\n          if (virtualized && !wordWrap) {\n            if (top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n          visibleRows.current.push(renderRowData(bodyCells, rowData, rowProps, expandedRow));\n        }\n      } else {\n        /** virtualized */\n\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length);\n\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData = data[_index];\n          var _rowProps = {\n            key: _index,\n            rowIndex: _index,\n            depth: _rowData[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight,\n            cellHeight: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, _rowProps, false));\n        }\n      }\n    }\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid'\n    // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef,\n    tabIndex: -1,\n    onKeyDown: onScrollByKeydown\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  maxHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","React","useRef","useCallback","useImperativeHandle","useReducer","useMemo","ReactIs","getTranslateDOMPositionXY","PropTypes","isFunction","debounce","Row","CellGroup","Scrollbar","MouseArea","Loader","EmptyMessage","TableContext","Cell","HeaderCell","Column","ColumnGroup","SCROLLBAR_WIDTH","CELL_PADDING_HEIGHT","SORT_TYPE","TREE_DEPTH","ROW_HEADER_HEIGHT","ROW_HEIGHT","mergeCells","isRTL","findRowKeys","resetLeftForCells","useClassNames","useControlled","useUpdateEffect","useCellDescriptor","useTableDimension","useTableRows","useAffix","useScrollListener","usePosition","useTableData","isSupportTouchEvent","flattenChildren","DATA_PLACEHOLDER","getChildrenProps","Table","forwardRef","props","ref","affixHeader","getChildren","children","_props$classPrefix","classPrefix","className","_props$data","data","dataProp","_props$defaultSortTyp","defaultSortType","DESC","widthProp","width","expandedRowKeysProp","expandedRowKeys","defaultExpandAllRows","defaultExpandedRowKeys","style","id","isTree","_props$hover","hover","bordered","cellBordered","wordWrap","loading","_props$locale","locale","emptyMessage","_props$showHeader","showHeader","sortColumn","_props$rowHeight","rowHeight","sortTypeProp","sortType","_props$headerHeight","headerHeight","headerHeightProp","_props$minHeight","minHeight","maxHeight","_props$height","height","autoHeight","fillHeight","rtlProp","rtl","translate3d","rowKey","virtualized","rowClassName","_props$rowExpandedHei","rowExpandedHeight","disabledScroll","affixHorizontalScrollbar","loadAnimation","_props$shouldUpdateSc","shouldUpdateScroll","renderRowProp","renderRow","renderRowExpandedProp","renderRowExpanded","renderLoading","renderEmpty","onSortColumn","onScroll","renderTreeToggle","onRowClick","onRowContextMenu","onExpandChange","onTouchStart","onTouchMove","onTouchEnd","rest","isAutoHeight","_useClassNames","withClassPrefix","mergeCls","merge","prefix","_useReducer","x","forceUpdate","_useControlled","setExpandedRowKeys","Error","length","hasOwnProperty","_useTableRows","tableRowsMaxHeight","bindTableRowsRef","getRowHeight","translateDOMPositionXY","forceUseTransform","enable3DTransform","shouldFixedColumn","some","child","_child$props","isElement","fixed","shouldRowSpanColumn","_child$props2","rowSpan","visibleRows","mouseAreaRef","tableRef","tableHeaderRef","affixHeaderWrapperRef","headerWrapperRef","tableBodyRef","wheelWrapperRef","scrollbarXRef","scrollbarYRef","handleTableResizeChange","_prevSize","event","onScrollTo","vertical","onScrollTop","onScrollLeft","deferUpdatePosition","_useTableDimension","onTableScroll","coords","onTableResizeChange","contentHeight","contentWidth","minScrollY","minScrollX","scrollY","scrollX","tableWidth","tableOffset","headerOffset","setScrollY","setScrollX","getTableHeight","_usePosition","forceUpdatePosition","_useScrollListener","isScrolling","onScrollHorizontal","onScrollVertical","onScrollBody","onScrollByKeydown","_useCellDescriptor","onHeaderCellResize","headerCells","bodyCells","allColumnsWidth","hasCustomTreeCol","colCounts","current","root","body","scrollPosition","top","Math","abs","left","scrollTop","scrollLeft","rowWidth","hasVerticalScrollbar","hasHorizontalScrollbar","classes","treetable","styles","rowData","createElement","cells","shouldRenderExpandedRow","depth","rowIndex","restRowProps","rowStyles","rowRight","right","rowNode","fixedLeftCells","fixedRightCells","scrollCells","fixedLeftCellGroupWidth","fixedRightCellGroupWidth","i","cell","_cell$props","isFixedStart","isFixedEnd","push","Fragment","isHeaderRow","undefined","renderTableHeader","rowProps","rowRef","fixedStyle","position","overflow","header","role","key","bindRowClick","bindRowContextMenu","handleTreeToggle","treeRowKey","_rowIndex","open","nextExpandedRowKeys","rowSpanState","renderRowData","hasChildren","Array","isArray","nextRowKey","cellHeight","onClick","onContextMenu","expanded","_cell$props2","_cell$props2$rowSpan","_cell$props3","_rowSpanState$current","_cell$props4","_rowSpanState$current2","call","dataCellHeight","_cellKey","dataKey","removedCell","cloneElement","onTreeToggle","removed","renderScrollbar","scrollbars","tableId","scrollLength","renderTableBody","_visibleRows$current","bodyHeight","bodyStyles","topHideHeight","bottomHideHeight","minTop","startHeight","maxTop","isCustomRowHeight","isUncertainHeight","coveredHeight","max","index","_maxHeight","expandedRow","nextRowHeight","_nextRowHeight","startIndex","floor","endIndex","min","ceil","coveredCount","_index","_rowData","_rowProps","wheelStyles","pointerEvents","topRowStyles","bottomRowStyles","addPrefix","contextValue","Provider","value","tabIndex","onKeyDown","displayName","propTypes","bool","oneOfType","number","string","any","array","object","func"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite-table/es/Table.js"],"sourcesContent":["'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"maxHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n  _excluded2 = [\"depth\", \"rowIndex\"],\n  _excluded3 = [\"cellHeight\"];\nimport React, { useRef, useCallback, useImperativeHandle, useReducer, useMemo } from 'react';\nimport * as ReactIs from 'react-is';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport Cell from './Cell';\nimport HeaderCell from './HeaderCell';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, TREE_DEPTH, ROW_HEADER_HEIGHT, ROW_HEIGHT } from './constants';\nimport { mergeCells, isRTL, findRowKeys, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, useTableData, isSupportTouchEvent } from './utils';\nimport { flattenChildren } from './utils/children';\nvar DATA_PLACEHOLDER = [];\nvar getChildrenProps = {\n  Cell: Cell,\n  HeaderCell: HeaderCell,\n  Column: Column,\n  ColumnGroup: ColumnGroup\n};\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n    getChildren = props.children,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n    className = props.className,\n    _props$data = props.data,\n    dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n    _props$defaultSortTyp = props.defaultSortType,\n    defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n    widthProp = props.width,\n    expandedRowKeysProp = props.expandedRowKeys,\n    defaultExpandAllRows = props.defaultExpandAllRows,\n    defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n    style = props.style,\n    id = props.id,\n    isTree = props.isTree,\n    _props$hover = props.hover,\n    hover = _props$hover === void 0 ? true : _props$hover,\n    bordered = props.bordered,\n    cellBordered = props.cellBordered,\n    wordWrap = props.wordWrap,\n    loading = props.loading,\n    _props$locale = props.locale,\n    locale = _props$locale === void 0 ? {\n      emptyMessage: 'No data found',\n      loading: 'Loading...'\n    } : _props$locale,\n    _props$showHeader = props.showHeader,\n    showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n    sortColumn = props.sortColumn,\n    _props$rowHeight = props.rowHeight,\n    rowHeight = _props$rowHeight === void 0 ? ROW_HEIGHT : _props$rowHeight,\n    sortTypeProp = props.sortType,\n    _props$headerHeight = props.headerHeight,\n    headerHeightProp = _props$headerHeight === void 0 ? ROW_HEADER_HEIGHT : _props$headerHeight,\n    _props$minHeight = props.minHeight,\n    minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n    maxHeight = props.maxHeight,\n    _props$height = props.height,\n    height = _props$height === void 0 ? 200 : _props$height,\n    autoHeight = props.autoHeight,\n    fillHeight = props.fillHeight,\n    rtlProp = props.rtl,\n    translate3d = props.translate3d,\n    rowKey = props.rowKey,\n    virtualized = props.virtualized,\n    rowClassName = props.rowClassName,\n    _props$rowExpandedHei = props.rowExpandedHeight,\n    rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n    disabledScroll = props.disabledScroll,\n    affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n    loadAnimation = props.loadAnimation,\n    _props$shouldUpdateSc = props.shouldUpdateScroll,\n    shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n    renderRowProp = props.renderRow,\n    renderRowExpandedProp = props.renderRowExpanded,\n    renderLoading = props.renderLoading,\n    renderEmpty = props.renderEmpty,\n    onSortColumn = props.onSortColumn,\n    onScroll = props.onScroll,\n    renderTreeToggle = props.renderTreeToggle,\n    onRowClick = props.onRowClick,\n    onRowContextMenu = props.onRowContextMenu,\n    onExpandChange = props.onExpandChange,\n    onTouchStart = props.onTouchStart,\n    onTouchMove = props.onTouchMove,\n    onTouchEnd = props.onTouchEnd,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var children = useMemo(function () {\n    return flattenChildren(isFunction(getChildren) ? getChildren(getChildrenProps) : getChildren);\n  }, [getChildren]);\n  var isAutoHeight = useMemo(function () {\n    return autoHeight && !maxHeight;\n  }, [autoHeight, maxHeight]);\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    mergeCls = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n\n  // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n  var _useReducer = useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    forceUpdate = _useReducer[1];\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n    expandedRowKeys = _useControlled[0],\n    setExpandedRowKeys = _useControlled[1];\n  var data = useTableData({\n    data: dataProp,\n    isTree: isTree,\n    expandedRowKeys: expandedRowKeys,\n    rowKey: rowKey\n  });\n  if (isTree) {\n    if (!rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    } else if (data.length > 0) {\n      if (!data[0].hasOwnProperty(rowKey)) {\n        throw new Error('The `rowKey` is not found in data');\n      }\n    }\n  }\n  var _useTableRows = useTableRows({\n      data: dataProp,\n      expandedRowKeys: expandedRowKeys,\n      wordWrap: wordWrap,\n      prefix: prefix\n    }),\n    tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n    bindTableRowsRef = _useTableRows.bindTableRowsRef;\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n  var getRowHeight = function getRowHeight() {\n    return typeof rowHeight === 'function' ? rowHeight() : rowHeight;\n  };\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  }));\n\n  // Check for the existence of fixed columns in all column properties.\n  var shouldFixedColumn = children.some(function (child) {\n    var _child$props;\n    return ReactIs.isElement(child) && (child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed);\n  });\n\n  // Check all column properties for the existence of rowSpan.\n  var shouldRowSpanColumn = children.some(function (child) {\n    var _child$props2;\n    return ReactIs.isElement(child) && (child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan);\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n    if (event === 'bodyWidthChanged') {\n      deferUpdatePosition();\n    }\n  };\n  var _useTableDimension = useTableDimension({\n      // The data should be flattened,\n      // otherwise the array length required to calculate the scroll height in the TreeTable is not real.\n      data: data,\n      width: widthProp,\n      rowHeight: rowHeight,\n      tableRef: tableRef,\n      headerWrapperRef: headerWrapperRef,\n      prefix: prefix,\n      affixHeader: affixHeader,\n      affixHorizontalScrollbar: affixHorizontalScrollbar,\n      headerHeight: headerHeight,\n      height: height,\n      minHeight: minHeight,\n      maxHeight: maxHeight,\n      autoHeight: autoHeight,\n      fillHeight: fillHeight,\n      children: children,\n      expandedRowKeys: expandedRowKeys,\n      showHeader: showHeader,\n      bordered: bordered,\n      onTableScroll: debounce(function (coords) {\n        return onScrollTo(coords);\n      }, 100),\n      onTableResizeChange: handleTableResizeChange\n    }),\n    contentHeight = _useTableDimension.contentHeight,\n    contentWidth = _useTableDimension.contentWidth,\n    minScrollY = _useTableDimension.minScrollY,\n    minScrollX = _useTableDimension.minScrollX,\n    scrollY = _useTableDimension.scrollY,\n    scrollX = _useTableDimension.scrollX,\n    tableWidth = _useTableDimension.tableWidth,\n    tableOffset = _useTableDimension.tableOffset,\n    headerOffset = _useTableDimension.headerOffset,\n    setScrollY = _useTableDimension.setScrollY,\n    setScrollX = _useTableDimension.setScrollX,\n    getTableHeight = _useTableDimension.getTableHeight;\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n  var _usePosition = usePosition({\n      data: dataProp,\n      height: height,\n      tableWidth: tableWidth,\n      tableRef: tableRef,\n      prefix: prefix,\n      translateDOMPositionXY: translateDOMPositionXY,\n      wheelWrapperRef: wheelWrapperRef,\n      headerWrapperRef: headerWrapperRef,\n      affixHeaderWrapperRef: affixHeaderWrapperRef,\n      tableHeaderRef: tableHeaderRef,\n      scrollX: scrollX,\n      scrollY: scrollY,\n      contentWidth: contentWidth,\n      shouldFixedColumn: shouldFixedColumn\n    }),\n    forceUpdatePosition = _usePosition.forceUpdatePosition,\n    deferUpdatePosition = _usePosition.deferUpdatePosition;\n  var _useScrollListener = useScrollListener({\n      rtl: rtl,\n      data: dataProp,\n      height: height,\n      virtualized: virtualized,\n      getTableHeight: getTableHeight,\n      contentHeight: contentHeight,\n      headerHeight: headerHeight,\n      autoHeight: isAutoHeight,\n      maxHeight: maxHeight,\n      tableBodyRef: tableBodyRef,\n      scrollbarXRef: scrollbarXRef,\n      scrollbarYRef: scrollbarYRef,\n      disabledScroll: disabledScroll,\n      loading: loading,\n      tableRef: tableRef,\n      contentWidth: contentWidth,\n      tableWidth: tableWidth,\n      scrollY: scrollY,\n      minScrollY: minScrollY,\n      minScrollX: minScrollX,\n      scrollX: scrollX,\n      setScrollX: setScrollX,\n      setScrollY: setScrollY,\n      forceUpdatePosition: forceUpdatePosition,\n      deferUpdatePosition: deferUpdatePosition,\n      onScroll: onScroll,\n      onTouchStart: onTouchStart,\n      onTouchMove: onTouchMove,\n      onTouchEnd: onTouchEnd\n    }),\n    isScrolling = _useScrollListener.isScrolling,\n    onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n    onScrollVertical = _useScrollListener.onScrollVertical,\n    onScrollBody = _useScrollListener.onScrollBody,\n    onScrollTop = _useScrollListener.onScrollTop,\n    onScrollLeft = _useScrollListener.onScrollLeft,\n    onScrollTo = _useScrollListener.onScrollTo,\n    onScrollByKeydown = _useScrollListener.onScrollByKeydown;\n  var _useCellDescriptor = useCellDescriptor({\n      children: children,\n      rtl: rtl,\n      mouseAreaRef: mouseAreaRef,\n      tableRef: tableRef,\n      minScrollX: minScrollX,\n      scrollX: scrollX,\n      tableWidth: tableWidth,\n      headerHeight: headerHeight,\n      showHeader: showHeader,\n      sortType: sortTypeProp,\n      defaultSortType: defaultSortType,\n      sortColumn: sortColumn,\n      prefix: prefix,\n      onSortColumn: onSortColumn,\n      // Force table update after column width change, so scrollbar re-renders.\n      onHeaderCellResize: forceUpdate,\n      rowHeight: rowHeight\n    }),\n    headerCells = _useCellDescriptor.headerCells,\n    bodyCells = _useCellDescriptor.bodyCells,\n    allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n    hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n      get body() {\n        return wheelWrapperRef.current;\n      },\n      // The scroll position of the table\n      get scrollPosition() {\n        return {\n          top: Math.abs(scrollY.current),\n          left: Math.abs(scrollX.current)\n        };\n      },\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current;\n\n  // Whether to show vertical scroll bar\n  var hasVerticalScrollbar = !isAutoHeight && contentHeight.current > getTableHeight() - headerHeight;\n\n  // Whether to show the horizontal scroll bar\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    loading: loading,\n    treetable: isTree,\n    hover: hover && !shouldRowSpanColumn,\n    'has-rowspan': shouldRowSpanColumn,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n  var renderRowExpanded = useCallback(function (rowData) {\n    var height = 0;\n    if (typeof rowExpandedHeight === 'function') {\n      height = rowExpandedHeight(rowData);\n    } else {\n      height = rowExpandedHeight;\n    }\n    var styles = {\n      height: height\n    };\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n      rowIndex = props.rowIndex,\n      restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData, rowIndex);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n    var rowRight = 0;\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n    var rowNode = null;\n\n    // IF there are fixed columns, add a fixed group\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n          fixed = _cell$props.fixed,\n          width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0,\n      rowIndex: -1\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    };\n\n    // Affix header\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n  var rowSpanState = useRef({});\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n    var cellHeight = props.cellHeight,\n      restRowProps = _objectWithoutPropertiesLoose(props, _excluded3);\n    var rowProps = _extends({}, restRowProps, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _cell$props3, _rowSpanState$current, _cell$props4, _rowSpanState$current2;\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = (_cell$props3 = _cell$props2).rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props3, rowData);\n      var dataCellHeight = rowSpan ? rowSpan * (cellHeight || ROW_HEIGHT) : cellHeight;\n      var _cellKey = cell.props.dataKey || i;\n\n      // Record the cell state of the merged row\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1;\n\n        // Restart counting when merged to the last cell.\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      }\n\n      // Cells marked as deleted when checking for merged cell.\n      var removedCell = (_cell$props4 = cell.props) !== null && _cell$props4 !== void 0 && _cell$props4.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        'aria-rowspan': rowSpan ? rowSpan : undefined,\n        hasChildren: hasChildren,\n        rowData: rowData,\n        rowIndex: props.rowIndex,\n        wordWrap: wordWrap,\n        height: dataCellHeight,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n    if (disabledScroll) {\n      return null;\n    }\n    var scrollbars = [];\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n    return scrollbars;\n  };\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n    if (data) {\n      var top = 0; // Row position\n      var minTop = Math.abs(scrollY.current);\n      var startHeight = 0;\n      if (typeof rowExpandedHeight === 'function') {\n        startHeight = data.length ? rowExpandedHeight(data[0]) : 100;\n      } else {\n        startHeight = rowExpandedHeight;\n      }\n      var maxTop = minTop + height + startHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap;\n\n      // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n        for (var index = 0; index < data.length; index++) {\n          var rowData = data[index];\n          var _maxHeight = tableRowsMaxHeight[index];\n          var expandedRow = shouldRenderExpandedRow(rowData);\n          var nextRowHeight = 0;\n          var cellHeight = 0;\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(rowData);\n            cellHeight = nextRowHeight;\n          } else {\n            nextRowHeight = _maxHeight ? Math.max(_maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n            cellHeight = nextRowHeight;\n            if (expandedRow) {\n              // If the row is expanded, the height of the expanded row is added.\n              if (typeof rowExpandedHeight === 'function') {\n                nextRowHeight += rowExpandedHeight(rowData);\n              } else {\n                nextRowHeight += rowExpandedHeight;\n              }\n            }\n          }\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: top,\n            rowIndex: index,\n            width: rowWidth,\n            depth: rowData[TREE_DEPTH],\n            height: nextRowHeight,\n            cellHeight: cellHeight\n          };\n          top += nextRowHeight;\n          if (virtualized && !wordWrap) {\n            if (top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n          visibleRows.current.push(renderRowData(bodyCells, rowData, rowProps, expandedRow));\n        }\n      } else {\n        /** virtualized */\n\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length);\n\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData = data[_index];\n          var _rowProps = {\n            key: _index,\n            rowIndex: _index,\n            depth: _rowData[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight,\n            cellHeight: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, _rowProps, false));\n        }\n      }\n    }\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid'\n    // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef,\n    tabIndex: -1,\n    onKeyDown: onScrollByKeydown\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  maxHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}