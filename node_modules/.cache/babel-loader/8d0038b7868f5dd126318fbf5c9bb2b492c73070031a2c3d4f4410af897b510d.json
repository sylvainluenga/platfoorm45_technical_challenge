{"ast":null,"code":"'use client';\n\n/**\n * Replaces the placement string with its polyfilled counterpart based on the given RTL (Right-to-Left) value.\n * @example\n * ```\n * placementPolyfill('bottomLeft');\n * // 'bottomStart'\n * ```\n */\nexport function placementPolyfill(placement, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  if (typeof placement === 'string') {\n    if (rtl) {\n      placement = placement.replace(/left|right/, function (m) {\n        return m === 'left' ? 'right' : 'left';\n      });\n    }\n    return placement.replace(/Left|Top/, 'Start').replace(/Right|Bottom/, 'End');\n  }\n  return placement;\n}\nexport default placementPolyfill;","map":{"version":3,"names":["placementPolyfill","placement","rtl","replace","m"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/internals/utils/placementPolyfill.js"],"sourcesContent":["'use client';\n/**\n * Replaces the placement string with its polyfilled counterpart based on the given RTL (Right-to-Left) value.\n * @example\n * ```\n * placementPolyfill('bottomLeft');\n * // 'bottomStart'\n * ```\n */\nexport function placementPolyfill(placement, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  if (typeof placement === 'string') {\n    if (rtl) {\n      placement = placement.replace(/left|right/, function (m) {\n        return m === 'left' ? 'right' : 'left';\n      });\n    }\n    return placement.replace(/Left|Top/, 'Start').replace(/Right|Bottom/, 'End');\n  }\n  return placement;\n}\nexport default placementPolyfill;"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,iBAAiBA,CAACC,SAAS,EAAEC,GAAG,EAAE;EAChD,IAAIA,GAAG,KAAK,KAAK,CAAC,EAAE;IAClBA,GAAG,GAAG,KAAK;EACb;EACA,IAAI,OAAOD,SAAS,KAAK,QAAQ,EAAE;IACjC,IAAIC,GAAG,EAAE;MACPD,SAAS,GAAGA,SAAS,CAACE,OAAO,CAAC,YAAY,EAAE,UAAUC,CAAC,EAAE;QACvD,OAAOA,CAAC,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;MACxC,CAAC,CAAC;IACJ;IACA,OAAOH,SAAS,CAACE,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAACA,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC;EAC9E;EACA,OAAOF,SAAS;AAClB;AACA,eAAeD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}