{"ast":null,"code":"'use client';\n\n// Ref: https://reactjs.org/docs/events.html#detecting-focus-entering-and-leaving\n\n/**\n * Whether the focus is moving inside of current element\n * @param event The `focus` event\n */\nexport function isFocusEntering(event) {\n  return event.type === 'focus' && !event.currentTarget.contains(event.relatedTarget);\n}\n\n/**\n * Whether the focus is moving outside of current element\n * @param event The `blur` event\n */\nexport function isFocusLeaving(event) {\n  return event.type === 'blur' && !event.currentTarget.contains(event.relatedTarget);\n}","map":{"version":3,"names":["isFocusEntering","event","type","currentTarget","contains","relatedTarget","isFocusLeaving"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/internals/utils/events.js"],"sourcesContent":["'use client';\n// Ref: https://reactjs.org/docs/events.html#detecting-focus-entering-and-leaving\n\n/**\n * Whether the focus is moving inside of current element\n * @param event The `focus` event\n */\nexport function isFocusEntering(event) {\n  return event.type === 'focus' && !event.currentTarget.contains(event.relatedTarget);\n}\n\n/**\n * Whether the focus is moving outside of current element\n * @param event The `blur` event\n */\nexport function isFocusLeaving(event) {\n  return event.type === 'blur' && !event.currentTarget.contains(event.relatedTarget);\n}"],"mappings":"AAAA,YAAY;;AACZ;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASA,eAAeA,CAACC,KAAK,EAAE;EACrC,OAAOA,KAAK,CAACC,IAAI,KAAK,OAAO,IAAI,CAACD,KAAK,CAACE,aAAa,CAACC,QAAQ,CAACH,KAAK,CAACI,aAAa,CAAC;AACrF;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACL,KAAK,EAAE;EACpC,OAAOA,KAAK,CAACC,IAAI,KAAK,MAAM,IAAI,CAACD,KAAK,CAACE,aAAa,CAACC,QAAQ,CAACH,KAAK,CAACI,aAAa,CAAC;AACpF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}