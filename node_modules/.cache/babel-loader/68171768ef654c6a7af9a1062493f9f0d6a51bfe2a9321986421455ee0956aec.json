{"ast":null,"code":"'use client';\n\n/**\n * Check if the time should be rendered based on the format.\n *\n * @param format - The format string.\n * @returns Whether the time should be rendered.\n */\nexport var shouldRenderTime = function shouldRenderTime(format) {\n  return /([Hhms])/.test(format);\n};\n\n/**\n * Check if the month should be rendered based on the format.\n *\n * @param format - The format string.\n * @returns Whether the month should be rendered.\n */\nexport var shouldRenderMonth = function shouldRenderMonth(format) {\n  return /[Yy]/.test(format) && /[ML]/.test(format);\n};\n\n/**\n * Check if the date should be rendered based on the format.\n *\n * @param format - The format string.\n * @returns Whether the date should be rendered.\n */\nexport var shouldRenderDate = function shouldRenderDate(format) {\n  return /[Yy]/.test(format) && /[ML]/.test(format) && /[Dd]/.test(format);\n};\n\n/**\n * Check if only the time should be rendered based on the format.\n *\n * @param format - The format string.\n * @returns Whether only the time should be rendered.\n */\nexport var shouldOnlyRenderTime = function shouldOnlyRenderTime(format) {\n  return /([Hhms])/.test(format) && !/([YyMDd])/.test(format);\n};","map":{"version":3,"names":["shouldRenderTime","format","test","shouldRenderMonth","shouldRenderDate","shouldOnlyRenderTime"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/internals/utils/date/formatCheck.js"],"sourcesContent":["'use client';\n/**\n * Check if the time should be rendered based on the format.\n *\n * @param format - The format string.\n * @returns Whether the time should be rendered.\n */\nexport var shouldRenderTime = function shouldRenderTime(format) {\n  return /([Hhms])/.test(format);\n};\n\n/**\n * Check if the month should be rendered based on the format.\n *\n * @param format - The format string.\n * @returns Whether the month should be rendered.\n */\nexport var shouldRenderMonth = function shouldRenderMonth(format) {\n  return /[Yy]/.test(format) && /[ML]/.test(format);\n};\n\n/**\n * Check if the date should be rendered based on the format.\n *\n * @param format - The format string.\n * @returns Whether the date should be rendered.\n */\nexport var shouldRenderDate = function shouldRenderDate(format) {\n  return /[Yy]/.test(format) && /[ML]/.test(format) && /[Dd]/.test(format);\n};\n\n/**\n * Check if only the time should be rendered based on the format.\n *\n * @param format - The format string.\n * @returns Whether only the time should be rendered.\n */\nexport var shouldOnlyRenderTime = function shouldOnlyRenderTime(format) {\n  return /([Hhms])/.test(format) && !/([YyMDd])/.test(format);\n};"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,MAAM,EAAE;EAC9D,OAAO,UAAU,CAACC,IAAI,CAACD,MAAM,CAAC;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIE,iBAAiB,GAAG,SAASA,iBAAiBA,CAACF,MAAM,EAAE;EAChE,OAAO,MAAM,CAACC,IAAI,CAACD,MAAM,CAAC,IAAI,MAAM,CAACC,IAAI,CAACD,MAAM,CAAC;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIG,gBAAgB,GAAG,SAASA,gBAAgBA,CAACH,MAAM,EAAE;EAC9D,OAAO,MAAM,CAACC,IAAI,CAACD,MAAM,CAAC,IAAI,MAAM,CAACC,IAAI,CAACD,MAAM,CAAC,IAAI,MAAM,CAACC,IAAI,CAACD,MAAM,CAAC;AAC1E,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,oBAAoB,GAAG,SAASA,oBAAoBA,CAACJ,MAAM,EAAE;EACtE,OAAO,UAAU,CAACC,IAAI,CAACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAACC,IAAI,CAACD,MAAM,CAAC;AAC7D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}