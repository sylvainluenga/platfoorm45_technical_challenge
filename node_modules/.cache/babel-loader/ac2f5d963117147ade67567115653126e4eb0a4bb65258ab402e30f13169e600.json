{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"style\", \"className\", \"classPrefix\", \"visible\", \"layer\", \"disabled\", \"allUncheckable\", \"loading\", \"expanded\", \"hasChildren\", \"nodeData\", \"focus\", \"label\", \"uncheckable\", \"checkState\", \"value\", \"treeItemRef\", \"onExpand\", \"onSelect\"];\nimport React, { forwardRef, useMemo } from 'react';\nimport ListCheckItem from \"../internals/Picker/ListCheckItem.js\";\nimport { stringifyReactNode, mergeRefs } from \"../internals/utils/index.js\";\nimport { CHECK_STATE } from \"../internals/constants/index.js\";\nimport { indentTreeNode } from \"../Tree/utils/index.js\";\nimport { useClassNames, useEventCallback, useCustom, useFocusVirtualListItem } from \"../internals/hooks/index.js\";\nimport { useTreeContextProps } from \"../internals/Tree/TreeProvider.js\";\nimport TreeNodeToggle from \"../Tree/TreeNodeToggle.js\";\nvar CheckTreeNode = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    style = props.style,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'check-tree-node' : _props$classPrefix,\n    _props$visible = props.visible,\n    visible = _props$visible === void 0 ? true : _props$visible,\n    layer = props.layer,\n    disabled = props.disabled,\n    allUncheckable = props.allUncheckable,\n    loading = props.loading,\n    expanded = props.expanded,\n    hasChildren = props.hasChildren,\n    nodeData = props.nodeData,\n    focus = props.focus,\n    label = props.label,\n    uncheckable = props.uncheckable,\n    checkState = props.checkState,\n    value = props.value,\n    treeItemRef = props.treeItemRef,\n    onExpand = props.onExpand,\n    onSelect = props.onSelect,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useCustom = useCustom(),\n    rtl = _useCustom.rtl;\n  var _useTreeContextProps = useTreeContextProps(),\n    renderTreeNode = _useTreeContextProps.renderTreeNode,\n    virtualized = _useTreeContextProps.virtualized;\n  var _useClassNames = useClassNames(classPrefix),\n    prefix = _useClassNames.prefix,\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var labelStr = useMemo(function () {\n    return stringifyReactNode(label);\n  }, [label]);\n  var handleExpand = useEventCallback(function (event) {\n    var _event$nativeEvent, _event$nativeEvent$st;\n    // stop propagation when using custom loading icon\n    event === null || event === void 0 ? void 0 : (_event$nativeEvent = event.nativeEvent) === null || _event$nativeEvent === void 0 ? void 0 : (_event$nativeEvent$st = _event$nativeEvent.stopImmediatePropagation) === null || _event$nativeEvent$st === void 0 ? void 0 : _event$nativeEvent$st.call(_event$nativeEvent);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nodeData, expanded);\n  });\n  var handleSelect = useEventCallback(function (_value, event) {\n    var isChecked = false;\n    if (checkState === CHECK_STATE.UNCHECK || checkState === CHECK_STATE.INDETERMINATE) {\n      isChecked = true;\n    }\n    if (checkState === CHECK_STATE.CHECK) {\n      isChecked = false;\n    }\n    var nextNodeData = _extends({}, nodeData, {\n      check: isChecked\n    });\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(nextNodeData, event);\n  });\n  var classes = merge(className, withClassPrefix({\n    disabled: disabled,\n    'all-uncheckable': !!allUncheckable,\n    'text-muted': disabled,\n    focus: focus\n  }));\n  var styles = virtualized ? _extends({}, style, indentTreeNode(rtl, layer - 1)) : style;\n  var itemRef = useFocusVirtualListItem(focus);\n  return visible ? /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    style: styles,\n    className: classes,\n    ref: ref\n  }), /*#__PURE__*/React.createElement(TreeNodeToggle, {\n    \"aria-label\": (expanded ? 'Collapse' : 'Expand') + (\" \" + labelStr),\n    data: nodeData,\n    expanded: expanded,\n    loading: loading,\n    hasChildren: hasChildren,\n    onClick: handleExpand\n  }), /*#__PURE__*/React.createElement(ListCheckItem, {\n    as: \"div\",\n    role: \"treeitem\",\n    ref: mergeRefs(itemRef, treeItemRef),\n    \"aria-label\": labelStr,\n    \"aria-expanded\": expanded,\n    \"aria-checked\": checkState === CHECK_STATE.CHECK,\n    \"aria-selected\": focus,\n    \"aria-disabled\": disabled,\n    \"aria-level\": layer,\n    \"data-layer\": layer,\n    active: checkState === CHECK_STATE.CHECK,\n    indeterminate: checkState === CHECK_STATE.INDETERMINATE,\n    focus: focus,\n    checkable: !uncheckable,\n    disabled: disabled,\n    value: nodeData.refKey || value,\n    className: prefix('content'),\n    title: labelStr,\n    onSelect: handleSelect\n  }, typeof renderTreeNode === 'function' ? renderTreeNode(nodeData) : label)) : null;\n});\nCheckTreeNode.displayName = 'CheckTreeNode';\nexport default CheckTreeNode;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","forwardRef","useMemo","ListCheckItem","stringifyReactNode","mergeRefs","CHECK_STATE","indentTreeNode","useClassNames","useEventCallback","useCustom","useFocusVirtualListItem","useTreeContextProps","TreeNodeToggle","CheckTreeNode","props","ref","_props$as","as","Component","style","className","_props$classPrefix","classPrefix","_props$visible","visible","layer","disabled","allUncheckable","loading","expanded","hasChildren","nodeData","focus","label","uncheckable","checkState","value","treeItemRef","onExpand","onSelect","rest","_useCustom","rtl","_useTreeContextProps","renderTreeNode","virtualized","_useClassNames","prefix","merge","withClassPrefix","labelStr","handleExpand","event","_event$nativeEvent","_event$nativeEvent$st","nativeEvent","stopImmediatePropagation","call","handleSelect","_value","isChecked","UNCHECK","INDETERMINATE","CHECK","nextNodeData","check","classes","styles","itemRef","createElement","data","onClick","role","active","indeterminate","checkable","refKey","title","displayName"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/CheckTree/CheckTreeNode.js"],"sourcesContent":["'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"style\", \"className\", \"classPrefix\", \"visible\", \"layer\", \"disabled\", \"allUncheckable\", \"loading\", \"expanded\", \"hasChildren\", \"nodeData\", \"focus\", \"label\", \"uncheckable\", \"checkState\", \"value\", \"treeItemRef\", \"onExpand\", \"onSelect\"];\nimport React, { forwardRef, useMemo } from 'react';\nimport ListCheckItem from \"../internals/Picker/ListCheckItem.js\";\nimport { stringifyReactNode, mergeRefs } from \"../internals/utils/index.js\";\nimport { CHECK_STATE } from \"../internals/constants/index.js\";\nimport { indentTreeNode } from \"../Tree/utils/index.js\";\nimport { useClassNames, useEventCallback, useCustom, useFocusVirtualListItem } from \"../internals/hooks/index.js\";\nimport { useTreeContextProps } from \"../internals/Tree/TreeProvider.js\";\nimport TreeNodeToggle from \"../Tree/TreeNodeToggle.js\";\nvar CheckTreeNode = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    style = props.style,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'check-tree-node' : _props$classPrefix,\n    _props$visible = props.visible,\n    visible = _props$visible === void 0 ? true : _props$visible,\n    layer = props.layer,\n    disabled = props.disabled,\n    allUncheckable = props.allUncheckable,\n    loading = props.loading,\n    expanded = props.expanded,\n    hasChildren = props.hasChildren,\n    nodeData = props.nodeData,\n    focus = props.focus,\n    label = props.label,\n    uncheckable = props.uncheckable,\n    checkState = props.checkState,\n    value = props.value,\n    treeItemRef = props.treeItemRef,\n    onExpand = props.onExpand,\n    onSelect = props.onSelect,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useCustom = useCustom(),\n    rtl = _useCustom.rtl;\n  var _useTreeContextProps = useTreeContextProps(),\n    renderTreeNode = _useTreeContextProps.renderTreeNode,\n    virtualized = _useTreeContextProps.virtualized;\n  var _useClassNames = useClassNames(classPrefix),\n    prefix = _useClassNames.prefix,\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var labelStr = useMemo(function () {\n    return stringifyReactNode(label);\n  }, [label]);\n  var handleExpand = useEventCallback(function (event) {\n    var _event$nativeEvent, _event$nativeEvent$st;\n    // stop propagation when using custom loading icon\n    event === null || event === void 0 ? void 0 : (_event$nativeEvent = event.nativeEvent) === null || _event$nativeEvent === void 0 ? void 0 : (_event$nativeEvent$st = _event$nativeEvent.stopImmediatePropagation) === null || _event$nativeEvent$st === void 0 ? void 0 : _event$nativeEvent$st.call(_event$nativeEvent);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nodeData, expanded);\n  });\n  var handleSelect = useEventCallback(function (_value, event) {\n    var isChecked = false;\n    if (checkState === CHECK_STATE.UNCHECK || checkState === CHECK_STATE.INDETERMINATE) {\n      isChecked = true;\n    }\n    if (checkState === CHECK_STATE.CHECK) {\n      isChecked = false;\n    }\n    var nextNodeData = _extends({}, nodeData, {\n      check: isChecked\n    });\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(nextNodeData, event);\n  });\n  var classes = merge(className, withClassPrefix({\n    disabled: disabled,\n    'all-uncheckable': !!allUncheckable,\n    'text-muted': disabled,\n    focus: focus\n  }));\n  var styles = virtualized ? _extends({}, style, indentTreeNode(rtl, layer - 1)) : style;\n  var itemRef = useFocusVirtualListItem(focus);\n  return visible ? /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    style: styles,\n    className: classes,\n    ref: ref\n  }), /*#__PURE__*/React.createElement(TreeNodeToggle, {\n    \"aria-label\": (expanded ? 'Collapse' : 'Expand') + (\" \" + labelStr),\n    data: nodeData,\n    expanded: expanded,\n    loading: loading,\n    hasChildren: hasChildren,\n    onClick: handleExpand\n  }), /*#__PURE__*/React.createElement(ListCheckItem, {\n    as: \"div\",\n    role: \"treeitem\",\n    ref: mergeRefs(itemRef, treeItemRef),\n    \"aria-label\": labelStr,\n    \"aria-expanded\": expanded,\n    \"aria-checked\": checkState === CHECK_STATE.CHECK,\n    \"aria-selected\": focus,\n    \"aria-disabled\": disabled,\n    \"aria-level\": layer,\n    \"data-layer\": layer,\n    active: checkState === CHECK_STATE.CHECK,\n    indeterminate: checkState === CHECK_STATE.INDETERMINATE,\n    focus: focus,\n    checkable: !uncheckable,\n    disabled: disabled,\n    value: nodeData.refKey || value,\n    className: prefix('content'),\n    title: labelStr,\n    onSelect: handleSelect\n  }, typeof renderTreeNode === 'function' ? renderTreeNode(nodeData) : label)) : null;\n});\nCheckTreeNode.displayName = 'CheckTreeNode';\nexport default CheckTreeNode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}