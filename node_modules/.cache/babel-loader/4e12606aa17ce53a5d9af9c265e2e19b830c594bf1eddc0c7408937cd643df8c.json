{"ast":null,"code":"'use client';\n\nimport { useRef, useCallback, useState, useEffect } from 'react';\nimport WheelHandler from 'dom-lib/WheelHandler';\nimport scrollLeft from 'dom-lib/scrollLeft';\nimport scrollTop from 'dom-lib/scrollTop';\nimport on from 'dom-lib/on';\nimport removeStyle from 'dom-lib/removeStyle';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from './requestAnimationTimeout';\nimport useUpdateEffect from './useUpdateEffect';\nimport useMount from './useMount';\nimport { SCROLLBAR_WIDTH, TRANSITION_DURATION, BEZIER } from '../constants';\nimport isSupportTouchEvent from './isSupportTouchEvent';\nimport flushSync from './flushSync';\nimport defer from './defer';\n\n// Inertial sliding start time threshold\nvar momentumTimeThreshold = 300;\n\n// Inertial sliding start vertical distance threshold\nvar momentumYThreshold = 15;\n\n//List of Arrow Keys for scrolling through keys\nvar arrowKeysList = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n/**\n * Calculate the distance of inertial sliding.\n */\nvar momentum = function momentum(current, start, duration) {\n  // Inertial sliding acceleration.\n  var deceleration = 0.003;\n  var distance = current - start;\n  var speed = 2 * Math.abs(distance) / duration;\n  var destination = current + speed / deceleration * (distance < 0 ? -1 : 1);\n  return {\n    delta: current - destination,\n    duration: TRANSITION_DURATION,\n    bezier: BEZIER\n  };\n};\n\n/**\n * Add scroll, touch, and wheel monitoring events to the table,\n * and update the scroll position of the table.\n * @param props\n * @returns\n */\nvar useScrollListener = function useScrollListener(props) {\n  var data = props.data,\n    autoHeight = props.autoHeight,\n    tableBodyRef = props.tableBodyRef,\n    scrollbarXRef = props.scrollbarXRef,\n    scrollbarYRef = props.scrollbarYRef,\n    disabledScroll = props.disabledScroll,\n    loading = props.loading,\n    tableRef = props.tableRef,\n    contentWidth = props.contentWidth,\n    tableWidth = props.tableWidth,\n    scrollY = props.scrollY,\n    minScrollY = props.minScrollY,\n    minScrollX = props.minScrollX,\n    scrollX = props.scrollX,\n    setScrollX = props.setScrollX,\n    setScrollY = props.setScrollY,\n    virtualized = props.virtualized,\n    forceUpdatePosition = props.forceUpdatePosition,\n    deferUpdatePosition = props.deferUpdatePosition,\n    onScroll = props.onScroll,\n    onTouchMove = props.onTouchMove,\n    onTouchStart = props.onTouchStart,\n    onTouchEnd = props.onTouchEnd,\n    heightProp = props.height,\n    getTableHeight = props.getTableHeight,\n    contentHeight = props.contentHeight,\n    headerHeight = props.headerHeight,\n    rtl = props.rtl;\n  var wheelListener = useRef();\n  var touchStartListener = useRef();\n  var touchMoveListener = useRef();\n  var touchEndListener = useRef();\n  var _useState = useState(false),\n    isScrolling = _useState[0],\n    setScrolling = _useState[1];\n  var touchX = useRef(0);\n  var touchY = useRef(0);\n  var disableEventsTimeoutId = useRef(null);\n  var isTouching = useRef(false);\n\n  // The start time within the inertial sliding range.\n  var momentumStartTime = useRef(0);\n\n  // The vertical starting value within the inertial sliding range.\n  var momentumStartY = useRef(0);\n  var shouldHandleWheelX = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n    return true;\n  }, [disabledScroll, loading]);\n  var shouldHandleWheelY = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading || autoHeight) {\n      return false;\n    }\n    if (typeof scrollY.current === 'number' && typeof minScrollY.current === 'number') {\n      return delta >= 0 && scrollY.current > minScrollY.current || delta < 0 && scrollY.current < 0;\n    }\n  }, [autoHeight, disabledScroll, loading, minScrollY, scrollY]);\n  var debounceScrollEndedCallback = useCallback(function () {\n    disableEventsTimeoutId.current = null;\n\n    // Forces the end of scrolling to be prioritized so that virtualized long lists can update rendering.\n    // There will be no scrolling white screen.\n    flushSync(function () {\n      return setScrolling(false);\n    });\n  }, []);\n\n  /**\n   * Triggered when scrolling, including: wheel/touch/scroll\n   * @param deltaX\n   * @param deltaY\n   * @param momentumOptions The configuration of inertial scrolling is used for the touch event.\n   */\n  var handleWheel = useCallback(function (deltaX, deltaY, momentumOptions, event) {\n    if (!tableRef.current) {\n      return;\n    }\n    var nextScrollX = contentWidth.current <= tableWidth.current ? 0 : scrollX.current - deltaX;\n    var nextScrollY = scrollY.current - deltaY;\n    var y = Math.min(0, nextScrollY < minScrollY.current ? minScrollY.current : nextScrollY);\n    var x = Math.min(0, nextScrollX < minScrollX.current ? minScrollX.current : nextScrollX);\n    setScrollX(x);\n    setScrollY(y);\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(x), Math.abs(y));\n    if (virtualized) {\n      // Add a state to the table during virtualized scrolling.\n      // Make it set CSS `pointer-events:none` on the DOM to avoid wrong event interaction.\n\n      flushSync(function () {\n        return setScrolling(true);\n      });\n      if (disableEventsTimeoutId.current) {\n        cancelAnimationTimeout(disableEventsTimeoutId.current);\n      }\n      disableEventsTimeoutId.current = requestAnimationTimeout(debounceScrollEndedCallback,\n      // When momentum is enabled, set a delay of 50ms rendering.\n      momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? 50 : 0);\n    }\n\n    // When the user clicks on the scrollbar, the scrollbar will be moved to the clicked position.\n    if ((event === null || event === void 0 ? void 0 : event.type) === 'click') {\n      /**\n       * With virtualized enabled, the list will be re-rendered on every scroll.\n       * Update the position of the rendered list with a delay.\n       * fix: https://github.com/rsuite/rsuite/issues/2378\n       */\n      deferUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n      return;\n    }\n    forceUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n  }, [tableRef, contentWidth, tableWidth, scrollX, scrollY, minScrollY, minScrollX, setScrollX, setScrollY, onScroll, forceUpdatePosition, deferUpdatePosition, virtualized, debounceScrollEndedCallback]);\n  var onWheel = useCallback(function (deltaX, deltaY, momentumOptions) {\n    var _scrollbarXRef$curren, _scrollbarXRef$curren2, _scrollbarYRef$curren, _scrollbarYRef$curren2;\n    handleWheel(deltaX, deltaY, momentumOptions);\n    (_scrollbarXRef$curren = scrollbarXRef.current) === null || _scrollbarXRef$curren === void 0 ? void 0 : (_scrollbarXRef$curren2 = _scrollbarXRef$curren.onWheelScroll) === null || _scrollbarXRef$curren2 === void 0 ? void 0 : _scrollbarXRef$curren2.call(_scrollbarXRef$curren, deltaX);\n    (_scrollbarYRef$curren = scrollbarYRef.current) === null || _scrollbarYRef$curren === void 0 ? void 0 : (_scrollbarYRef$curren2 = _scrollbarYRef$curren.onWheelScroll) === null || _scrollbarYRef$curren2 === void 0 ? void 0 : _scrollbarYRef$curren2.call(_scrollbarYRef$curren, deltaY, momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? true : false);\n  }, [handleWheel, scrollbarXRef, scrollbarYRef]);\n  var wheelHandler = useRef();\n\n  // Stop unending scrolling and remove transition\n  var stopScroll = useCallback(function () {\n    var _tableBodyRef$current, _scrollbarYRef$curren3;\n    var wheelElement = (_tableBodyRef$current = tableBodyRef.current) === null || _tableBodyRef$current === void 0 ? void 0 : _tableBodyRef$current.querySelector('.rs-table-body-wheel-area');\n    var handleElement = (_scrollbarYRef$curren3 = scrollbarYRef.current) === null || _scrollbarYRef$curren3 === void 0 ? void 0 : _scrollbarYRef$curren3.handle;\n    var transitionCSS = ['transition-duration', 'transition-timing-function'];\n    if (!virtualized && wheelElement) {\n      // Get the current translate position.\n      var matrix = window.getComputedStyle(wheelElement).getPropertyValue('transform');\n      var offsetY = Math.round(+matrix.split(')')[0].split(', ')[5]);\n      setScrollY(offsetY);\n    }\n    if (wheelElement) {\n      removeStyle(wheelElement, transitionCSS);\n    }\n    if (handleElement) {\n      removeStyle(handleElement, transitionCSS);\n    }\n  }, [scrollbarYRef, setScrollY, tableBodyRef, virtualized]);\n\n  // Handle the Touch event and initialize it when touchstart is triggered.\n  var handleTouchStart = useCallback(function (event) {\n    var _event$touches$ = event.touches[0],\n      pageX = _event$touches$.pageX,\n      pageY = _event$touches$.pageY;\n    touchX.current = pageX;\n    touchY.current = pageY;\n    momentumStartTime.current = new Date().getTime();\n    momentumStartY.current = scrollY.current;\n    isTouching.current = true;\n    onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event);\n\n    // Stop unfinished scrolling when Touch starts.\n    stopScroll();\n  }, [onTouchStart, scrollY, stopScroll]);\n\n  // Handle the Touch event and update the scroll when touchmove is triggered.\n  var handleTouchMove = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n    var _event$touches$2 = event.touches[0],\n      pageX = _event$touches$2.pageX,\n      pageY = _event$touches$2.pageY;\n    var deltaX = touchX.current - pageX;\n    var deltaY = autoHeight ? 0 : touchY.current - pageY;\n    if (!shouldHandleWheelY(deltaY) && !shouldHandleWheelX(deltaX)) {\n      return;\n    }\n\n    /**\n     * Prevent the default touch event when the table is scrollable.\n     * fix: https://github.com/rsuite/rsuite-table/commit/21785fc18f430519ab5885c44540d9ffc30de366#commitcomment-36236425\n     */\n    if (!autoHeight && shouldHandleWheelY(deltaY)) {\n      var _event$preventDefault;\n      (_event$preventDefault = event.preventDefault) === null || _event$preventDefault === void 0 ? void 0 : _event$preventDefault.call(event);\n    }\n    var now = new Date().getTime();\n    onWheel(deltaX, deltaY);\n    touchX.current = pageX;\n    touchY.current = pageY;\n\n    // Record the offset value and time under the condition of triggering inertial scrolling.\n    if (now - momentumStartTime.current > momentumTimeThreshold) {\n      momentumStartY.current = scrollY.current;\n      momentumStartTime.current = now;\n    }\n    onTouchMove === null || onTouchMove === void 0 ? void 0 : onTouchMove(event);\n  }, [autoHeight, onWheel, onTouchMove, scrollY, shouldHandleWheelX, shouldHandleWheelY]);\n  var handleTouchEnd = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n    isTouching.current = false;\n    var touchDuration = new Date().getTime() - momentumStartTime.current;\n    var absDeltaY = Math.abs(scrollY.current - momentumStartY.current);\n\n    // Enable inertial sliding.\n    if (touchDuration < momentumTimeThreshold && absDeltaY > momentumYThreshold) {\n      var _momentum = momentum(scrollY.current, momentumStartY.current, touchDuration),\n        delta = _momentum.delta,\n        duration = _momentum.duration,\n        bezier = _momentum.bezier;\n      onWheel(0, delta, {\n        duration: duration,\n        bezier: bezier\n      });\n      onTouchEnd === null || onTouchEnd === void 0 ? void 0 : onTouchEnd(event);\n    }\n  }, [onWheel, onTouchEnd, scrollY]);\n\n  /**\n   * When the user uses the tab key in the Table, the onScroll event is triggered,\n   * and the scroll bar position should be updated at the same time.\n   * https://github.com/rsuite/rsuite/issues/234\n   */\n  var onScrollBody = useCallback(function (event) {\n    if (event.target !== tableBodyRef.current) {\n      return;\n    }\n    var left = scrollLeft(event.target);\n    var top = scrollTop(event.target);\n    if (top === 0 && left === 0) {\n      return;\n    }\n    onWheel(left, top);\n    scrollLeft(event.target, 0);\n    scrollTop(event.target, 0);\n  }, [onWheel, tableBodyRef]);\n  var getControlledScrollTopValue = useCallback(function (value) {\n    if (autoHeight) {\n      return [0, 0];\n    }\n    var height = getTableHeight();\n\n    // The maximum range of scrolling value is judged.\n    value = Math.min(value, Math.max(0, contentHeight.current - (height - headerHeight)));\n\n    // The value is a value of the theoretical scroll position of the table,\n    // and the scrollY coordinate value and the value of the scroll bar position are calculated by value.\n    return [-value, value / contentHeight.current * (height - headerHeight)];\n  }, [autoHeight, contentHeight, getTableHeight, headerHeight]);\n  var rerender = function rerender() {\n    setScrolling(true);\n    defer(function () {\n      if (tableBodyRef.current) {\n        setScrolling(false);\n      }\n    });\n  };\n  var getControlledScrollLeftValue = function getControlledScrollLeftValue(value) {\n    // The maximum range of scrolling value is judged.\n    value = Math.min(value, Math.max(0, contentWidth.current - tableWidth.current));\n    return [-value, value / contentWidth.current * tableWidth.current];\n  };\n  var onScrollTop = function onScrollTop(top) {\n    var _scrollbarYRef$curren4, _scrollbarYRef$curren5;\n    if (top === void 0) {\n      top = 0;\n    }\n    var _getControlledScrollT = getControlledScrollTopValue(top),\n      nextScrollY = _getControlledScrollT[0],\n      handleScrollY = _getControlledScrollT[1];\n    var height = getTableHeight();\n    if (!loading && nextScrollY !== scrollY.current) {\n      onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(scrollX.current), Math.abs(nextScrollY));\n    }\n    setScrollY(nextScrollY);\n    scrollbarYRef === null || scrollbarYRef === void 0 ? void 0 : (_scrollbarYRef$curren4 = scrollbarYRef.current) === null || _scrollbarYRef$curren4 === void 0 ? void 0 : (_scrollbarYRef$curren5 = _scrollbarYRef$curren4.resetScrollBarPosition) === null || _scrollbarYRef$curren5 === void 0 ? void 0 : _scrollbarYRef$curren5.call(_scrollbarYRef$curren4, handleScrollY);\n    deferUpdatePosition();\n\n    /**\n     * After calling `scrollTop`, a white screen will appear when `virtualized` is true.\n     * The reason is that the coordinates of the DOM are directly manipulated,\n     * but the component is not re-rendered. Need to call `rerender`.\n     * Fix: rsuite#1044\n     */\n    if (virtualized && contentHeight.current > height) {\n      rerender();\n    }\n  };\n  var onScrollLeft = function onScrollLeft(left) {\n    var _scrollbarXRef$curren3, _scrollbarXRef$curren4;\n    if (left === void 0) {\n      left = 0;\n    }\n    var _getControlledScrollL = getControlledScrollLeftValue(left),\n      nextScrollX = _getControlledScrollL[0],\n      scrollbarX = _getControlledScrollL[1];\n    setScrollX(nextScrollX);\n    !loading && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(nextScrollX), Math.abs(scrollY.current)));\n    scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren3 = scrollbarXRef.current) === null || _scrollbarXRef$curren3 === void 0 ? void 0 : (_scrollbarXRef$curren4 = _scrollbarXRef$curren3.resetScrollBarPosition) === null || _scrollbarXRef$curren4 === void 0 ? void 0 : _scrollbarXRef$curren4.call(_scrollbarXRef$curren3, scrollbarX);\n    deferUpdatePosition();\n  };\n  var onScrollTo = function onScrollTo(coord) {\n    var _ref = coord || {},\n      x = _ref.x,\n      y = _ref.y;\n    if (typeof x === 'number') {\n      onScrollLeft(x);\n    }\n    if (typeof y === 'number') {\n      onScrollTop(y);\n    }\n  };\n  useUpdateEffect(function () {\n    if (scrollY.current !== 0) {\n      onScrollTop(Math.abs(scrollY.current));\n    }\n\n    // fix: #405 #404\n    deferUpdatePosition();\n  }, [heightProp, data]);\n  var releaseListeners = useCallback(function () {\n    var _wheelListener$curren, _touchStartListener$c, _touchMoveListener$cu, _touchEndListener$cur;\n    wheelHandler.current = null;\n    (_wheelListener$curren = wheelListener.current) === null || _wheelListener$curren === void 0 ? void 0 : _wheelListener$curren.off();\n    (_touchStartListener$c = touchStartListener.current) === null || _touchStartListener$c === void 0 ? void 0 : _touchStartListener$c.off();\n    (_touchMoveListener$cu = touchMoveListener.current) === null || _touchMoveListener$cu === void 0 ? void 0 : _touchMoveListener$cu.off();\n    (_touchEndListener$cur = touchEndListener.current) === null || _touchEndListener$cur === void 0 ? void 0 : _touchEndListener$cur.off();\n  }, []);\n  useEffect(function () {\n    var options = {\n      passive: false\n    };\n    var tableBody = tableBodyRef.current;\n    if (tableBody) {\n      // Reset the listener after props is updated.\n      releaseListeners();\n      wheelHandler.current = new WheelHandler(onWheel, shouldHandleWheelX, shouldHandleWheelY, false);\n      wheelListener.current = on(tableBody, 'wheel', wheelHandler.current.onWheel, options);\n      if (isSupportTouchEvent()) {\n        touchStartListener.current = on(tableBody, 'touchstart', handleTouchStart, options);\n        touchMoveListener.current = on(tableBody, 'touchmove', handleTouchMove, options);\n        touchEndListener.current = on(tableBody, 'touchend', handleTouchEnd, options);\n      }\n    }\n    return releaseListeners;\n  }, [handleTouchEnd, handleTouchMove, handleTouchStart, onWheel, releaseListeners, shouldHandleWheelX, shouldHandleWheelY, tableBodyRef]);\n  var onScrollByKeydown = useCallback(function (event) {\n    if (event.currentTarget === event.target && arrowKeysList.indexOf(event.key) > -1) {\n      event.preventDefault();\n      var step = 40;\n      switch (event.key) {\n        case 'ArrowUp':\n          onWheel(0, -step);\n          break;\n        case 'ArrowDown':\n          onWheel(0, step);\n          break;\n        case 'ArrowLeft':\n          onWheel(-step, 0);\n          break;\n        case 'ArrowRight':\n          onWheel(step, 0);\n          break;\n      }\n    }\n  }, [onWheel]);\n  useMount(function () {\n    if (rtl) {\n      var _scrollbarXRef$curren5, _scrollbarXRef$curren6;\n      // Initialize scroll position\n      setScrollX(tableWidth.current - contentWidth.current - SCROLLBAR_WIDTH);\n      scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren5 = scrollbarXRef.current) === null || _scrollbarXRef$curren5 === void 0 ? void 0 : (_scrollbarXRef$curren6 = _scrollbarXRef$curren5.resetScrollBarPosition) === null || _scrollbarXRef$curren6 === void 0 ? void 0 : _scrollbarXRef$curren6.call(_scrollbarXRef$curren5, -scrollX.current);\n      forceUpdatePosition();\n    }\n  });\n  var onScrollHorizontal = useCallback(function (delta) {\n    return handleWheel(delta, 0);\n  }, [handleWheel]);\n  var onScrollVertical = useCallback(function (delta, event) {\n    return handleWheel(0, delta, undefined, event);\n  }, [handleWheel]);\n  return {\n    isScrolling: isScrolling,\n    onScrollHorizontal: onScrollHorizontal,\n    onScrollVertical: onScrollVertical,\n    onScrollBody: onScrollBody,\n    onScrollTop: onScrollTop,\n    onScrollLeft: onScrollLeft,\n    onScrollTo: onScrollTo,\n    onScrollByKeydown: onScrollByKeydown\n  };\n};\nexport default useScrollListener;","map":{"version":3,"names":["useRef","useCallback","useState","useEffect","WheelHandler","scrollLeft","scrollTop","on","removeStyle","requestAnimationTimeout","cancelAnimationTimeout","useUpdateEffect","useMount","SCROLLBAR_WIDTH","TRANSITION_DURATION","BEZIER","isSupportTouchEvent","flushSync","defer","momentumTimeThreshold","momentumYThreshold","arrowKeysList","momentum","current","start","duration","deceleration","distance","speed","Math","abs","destination","delta","bezier","useScrollListener","props","data","autoHeight","tableBodyRef","scrollbarXRef","scrollbarYRef","disabledScroll","loading","tableRef","contentWidth","tableWidth","scrollY","minScrollY","minScrollX","scrollX","setScrollX","setScrollY","virtualized","forceUpdatePosition","deferUpdatePosition","onScroll","onTouchMove","onTouchStart","onTouchEnd","heightProp","height","getTableHeight","contentHeight","headerHeight","rtl","wheelListener","touchStartListener","touchMoveListener","touchEndListener","_useState","isScrolling","setScrolling","touchX","touchY","disableEventsTimeoutId","isTouching","momentumStartTime","momentumStartY","shouldHandleWheelX","shouldHandleWheelY","debounceScrollEndedCallback","handleWheel","deltaX","deltaY","momentumOptions","event","nextScrollX","nextScrollY","y","min","x","type","onWheel","_scrollbarXRef$curren","_scrollbarXRef$curren2","_scrollbarYRef$curren","_scrollbarYRef$curren2","onWheelScroll","call","wheelHandler","stopScroll","_tableBodyRef$current","_scrollbarYRef$curren3","wheelElement","querySelector","handleElement","handle","transitionCSS","matrix","window","getComputedStyle","getPropertyValue","offsetY","round","split","handleTouchStart","_event$touches$","touches","pageX","pageY","Date","getTime","handleTouchMove","_event$touches$2","_event$preventDefault","preventDefault","now","handleTouchEnd","touchDuration","absDeltaY","_momentum","onScrollBody","target","left","top","getControlledScrollTopValue","value","max","rerender","getControlledScrollLeftValue","onScrollTop","_scrollbarYRef$curren4","_scrollbarYRef$curren5","_getControlledScrollT","handleScrollY","resetScrollBarPosition","onScrollLeft","_scrollbarXRef$curren3","_scrollbarXRef$curren4","_getControlledScrollL","scrollbarX","onScrollTo","coord","_ref","releaseListeners","_wheelListener$curren","_touchStartListener$c","_touchMoveListener$cu","_touchEndListener$cur","off","options","passive","tableBody","onScrollByKeydown","currentTarget","indexOf","key","step","_scrollbarXRef$curren5","_scrollbarXRef$curren6","onScrollHorizontal","onScrollVertical","undefined"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite-table/es/utils/useScrollListener.js"],"sourcesContent":["'use client';\nimport { useRef, useCallback, useState, useEffect } from 'react';\nimport WheelHandler from 'dom-lib/WheelHandler';\nimport scrollLeft from 'dom-lib/scrollLeft';\nimport scrollTop from 'dom-lib/scrollTop';\nimport on from 'dom-lib/on';\nimport removeStyle from 'dom-lib/removeStyle';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from './requestAnimationTimeout';\nimport useUpdateEffect from './useUpdateEffect';\nimport useMount from './useMount';\nimport { SCROLLBAR_WIDTH, TRANSITION_DURATION, BEZIER } from '../constants';\nimport isSupportTouchEvent from './isSupportTouchEvent';\nimport flushSync from './flushSync';\nimport defer from './defer';\n\n// Inertial sliding start time threshold\nvar momentumTimeThreshold = 300;\n\n// Inertial sliding start vertical distance threshold\nvar momentumYThreshold = 15;\n\n//List of Arrow Keys for scrolling through keys\nvar arrowKeysList = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n/**\n * Calculate the distance of inertial sliding.\n */\nvar momentum = function momentum(current, start, duration) {\n  // Inertial sliding acceleration.\n  var deceleration = 0.003;\n  var distance = current - start;\n  var speed = 2 * Math.abs(distance) / duration;\n  var destination = current + speed / deceleration * (distance < 0 ? -1 : 1);\n  return {\n    delta: current - destination,\n    duration: TRANSITION_DURATION,\n    bezier: BEZIER\n  };\n};\n\n/**\n * Add scroll, touch, and wheel monitoring events to the table,\n * and update the scroll position of the table.\n * @param props\n * @returns\n */\nvar useScrollListener = function useScrollListener(props) {\n  var data = props.data,\n    autoHeight = props.autoHeight,\n    tableBodyRef = props.tableBodyRef,\n    scrollbarXRef = props.scrollbarXRef,\n    scrollbarYRef = props.scrollbarYRef,\n    disabledScroll = props.disabledScroll,\n    loading = props.loading,\n    tableRef = props.tableRef,\n    contentWidth = props.contentWidth,\n    tableWidth = props.tableWidth,\n    scrollY = props.scrollY,\n    minScrollY = props.minScrollY,\n    minScrollX = props.minScrollX,\n    scrollX = props.scrollX,\n    setScrollX = props.setScrollX,\n    setScrollY = props.setScrollY,\n    virtualized = props.virtualized,\n    forceUpdatePosition = props.forceUpdatePosition,\n    deferUpdatePosition = props.deferUpdatePosition,\n    onScroll = props.onScroll,\n    onTouchMove = props.onTouchMove,\n    onTouchStart = props.onTouchStart,\n    onTouchEnd = props.onTouchEnd,\n    heightProp = props.height,\n    getTableHeight = props.getTableHeight,\n    contentHeight = props.contentHeight,\n    headerHeight = props.headerHeight,\n    rtl = props.rtl;\n  var wheelListener = useRef();\n  var touchStartListener = useRef();\n  var touchMoveListener = useRef();\n  var touchEndListener = useRef();\n  var _useState = useState(false),\n    isScrolling = _useState[0],\n    setScrolling = _useState[1];\n  var touchX = useRef(0);\n  var touchY = useRef(0);\n  var disableEventsTimeoutId = useRef(null);\n  var isTouching = useRef(false);\n\n  // The start time within the inertial sliding range.\n  var momentumStartTime = useRef(0);\n\n  // The vertical starting value within the inertial sliding range.\n  var momentumStartY = useRef(0);\n  var shouldHandleWheelX = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n    return true;\n  }, [disabledScroll, loading]);\n  var shouldHandleWheelY = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading || autoHeight) {\n      return false;\n    }\n    if (typeof scrollY.current === 'number' && typeof minScrollY.current === 'number') {\n      return delta >= 0 && scrollY.current > minScrollY.current || delta < 0 && scrollY.current < 0;\n    }\n  }, [autoHeight, disabledScroll, loading, minScrollY, scrollY]);\n  var debounceScrollEndedCallback = useCallback(function () {\n    disableEventsTimeoutId.current = null;\n\n    // Forces the end of scrolling to be prioritized so that virtualized long lists can update rendering.\n    // There will be no scrolling white screen.\n    flushSync(function () {\n      return setScrolling(false);\n    });\n  }, []);\n\n  /**\n   * Triggered when scrolling, including: wheel/touch/scroll\n   * @param deltaX\n   * @param deltaY\n   * @param momentumOptions The configuration of inertial scrolling is used for the touch event.\n   */\n  var handleWheel = useCallback(function (deltaX, deltaY, momentumOptions, event) {\n    if (!tableRef.current) {\n      return;\n    }\n    var nextScrollX = contentWidth.current <= tableWidth.current ? 0 : scrollX.current - deltaX;\n    var nextScrollY = scrollY.current - deltaY;\n    var y = Math.min(0, nextScrollY < minScrollY.current ? minScrollY.current : nextScrollY);\n    var x = Math.min(0, nextScrollX < minScrollX.current ? minScrollX.current : nextScrollX);\n    setScrollX(x);\n    setScrollY(y);\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(x), Math.abs(y));\n    if (virtualized) {\n      // Add a state to the table during virtualized scrolling.\n      // Make it set CSS `pointer-events:none` on the DOM to avoid wrong event interaction.\n\n      flushSync(function () {\n        return setScrolling(true);\n      });\n      if (disableEventsTimeoutId.current) {\n        cancelAnimationTimeout(disableEventsTimeoutId.current);\n      }\n      disableEventsTimeoutId.current = requestAnimationTimeout(debounceScrollEndedCallback,\n      // When momentum is enabled, set a delay of 50ms rendering.\n      momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? 50 : 0);\n    }\n\n    // When the user clicks on the scrollbar, the scrollbar will be moved to the clicked position.\n    if ((event === null || event === void 0 ? void 0 : event.type) === 'click') {\n      /**\n       * With virtualized enabled, the list will be re-rendered on every scroll.\n       * Update the position of the rendered list with a delay.\n       * fix: https://github.com/rsuite/rsuite/issues/2378\n       */\n      deferUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n      return;\n    }\n    forceUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n  }, [tableRef, contentWidth, tableWidth, scrollX, scrollY, minScrollY, minScrollX, setScrollX, setScrollY, onScroll, forceUpdatePosition, deferUpdatePosition, virtualized, debounceScrollEndedCallback]);\n  var onWheel = useCallback(function (deltaX, deltaY, momentumOptions) {\n    var _scrollbarXRef$curren, _scrollbarXRef$curren2, _scrollbarYRef$curren, _scrollbarYRef$curren2;\n    handleWheel(deltaX, deltaY, momentumOptions);\n    (_scrollbarXRef$curren = scrollbarXRef.current) === null || _scrollbarXRef$curren === void 0 ? void 0 : (_scrollbarXRef$curren2 = _scrollbarXRef$curren.onWheelScroll) === null || _scrollbarXRef$curren2 === void 0 ? void 0 : _scrollbarXRef$curren2.call(_scrollbarXRef$curren, deltaX);\n    (_scrollbarYRef$curren = scrollbarYRef.current) === null || _scrollbarYRef$curren === void 0 ? void 0 : (_scrollbarYRef$curren2 = _scrollbarYRef$curren.onWheelScroll) === null || _scrollbarYRef$curren2 === void 0 ? void 0 : _scrollbarYRef$curren2.call(_scrollbarYRef$curren, deltaY, momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? true : false);\n  }, [handleWheel, scrollbarXRef, scrollbarYRef]);\n  var wheelHandler = useRef();\n\n  // Stop unending scrolling and remove transition\n  var stopScroll = useCallback(function () {\n    var _tableBodyRef$current, _scrollbarYRef$curren3;\n    var wheelElement = (_tableBodyRef$current = tableBodyRef.current) === null || _tableBodyRef$current === void 0 ? void 0 : _tableBodyRef$current.querySelector('.rs-table-body-wheel-area');\n    var handleElement = (_scrollbarYRef$curren3 = scrollbarYRef.current) === null || _scrollbarYRef$curren3 === void 0 ? void 0 : _scrollbarYRef$curren3.handle;\n    var transitionCSS = ['transition-duration', 'transition-timing-function'];\n    if (!virtualized && wheelElement) {\n      // Get the current translate position.\n      var matrix = window.getComputedStyle(wheelElement).getPropertyValue('transform');\n      var offsetY = Math.round(+matrix.split(')')[0].split(', ')[5]);\n      setScrollY(offsetY);\n    }\n    if (wheelElement) {\n      removeStyle(wheelElement, transitionCSS);\n    }\n    if (handleElement) {\n      removeStyle(handleElement, transitionCSS);\n    }\n  }, [scrollbarYRef, setScrollY, tableBodyRef, virtualized]);\n\n  // Handle the Touch event and initialize it when touchstart is triggered.\n  var handleTouchStart = useCallback(function (event) {\n    var _event$touches$ = event.touches[0],\n      pageX = _event$touches$.pageX,\n      pageY = _event$touches$.pageY;\n    touchX.current = pageX;\n    touchY.current = pageY;\n    momentumStartTime.current = new Date().getTime();\n    momentumStartY.current = scrollY.current;\n    isTouching.current = true;\n    onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event);\n\n    // Stop unfinished scrolling when Touch starts.\n    stopScroll();\n  }, [onTouchStart, scrollY, stopScroll]);\n\n  // Handle the Touch event and update the scroll when touchmove is triggered.\n  var handleTouchMove = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n    var _event$touches$2 = event.touches[0],\n      pageX = _event$touches$2.pageX,\n      pageY = _event$touches$2.pageY;\n    var deltaX = touchX.current - pageX;\n    var deltaY = autoHeight ? 0 : touchY.current - pageY;\n    if (!shouldHandleWheelY(deltaY) && !shouldHandleWheelX(deltaX)) {\n      return;\n    }\n\n    /**\n     * Prevent the default touch event when the table is scrollable.\n     * fix: https://github.com/rsuite/rsuite-table/commit/21785fc18f430519ab5885c44540d9ffc30de366#commitcomment-36236425\n     */\n    if (!autoHeight && shouldHandleWheelY(deltaY)) {\n      var _event$preventDefault;\n      (_event$preventDefault = event.preventDefault) === null || _event$preventDefault === void 0 ? void 0 : _event$preventDefault.call(event);\n    }\n    var now = new Date().getTime();\n    onWheel(deltaX, deltaY);\n    touchX.current = pageX;\n    touchY.current = pageY;\n\n    // Record the offset value and time under the condition of triggering inertial scrolling.\n    if (now - momentumStartTime.current > momentumTimeThreshold) {\n      momentumStartY.current = scrollY.current;\n      momentumStartTime.current = now;\n    }\n    onTouchMove === null || onTouchMove === void 0 ? void 0 : onTouchMove(event);\n  }, [autoHeight, onWheel, onTouchMove, scrollY, shouldHandleWheelX, shouldHandleWheelY]);\n  var handleTouchEnd = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n    isTouching.current = false;\n    var touchDuration = new Date().getTime() - momentumStartTime.current;\n    var absDeltaY = Math.abs(scrollY.current - momentumStartY.current);\n\n    // Enable inertial sliding.\n    if (touchDuration < momentumTimeThreshold && absDeltaY > momentumYThreshold) {\n      var _momentum = momentum(scrollY.current, momentumStartY.current, touchDuration),\n        delta = _momentum.delta,\n        duration = _momentum.duration,\n        bezier = _momentum.bezier;\n      onWheel(0, delta, {\n        duration: duration,\n        bezier: bezier\n      });\n      onTouchEnd === null || onTouchEnd === void 0 ? void 0 : onTouchEnd(event);\n    }\n  }, [onWheel, onTouchEnd, scrollY]);\n\n  /**\n   * When the user uses the tab key in the Table, the onScroll event is triggered,\n   * and the scroll bar position should be updated at the same time.\n   * https://github.com/rsuite/rsuite/issues/234\n   */\n  var onScrollBody = useCallback(function (event) {\n    if (event.target !== tableBodyRef.current) {\n      return;\n    }\n    var left = scrollLeft(event.target);\n    var top = scrollTop(event.target);\n    if (top === 0 && left === 0) {\n      return;\n    }\n    onWheel(left, top);\n    scrollLeft(event.target, 0);\n    scrollTop(event.target, 0);\n  }, [onWheel, tableBodyRef]);\n  var getControlledScrollTopValue = useCallback(function (value) {\n    if (autoHeight) {\n      return [0, 0];\n    }\n    var height = getTableHeight();\n\n    // The maximum range of scrolling value is judged.\n    value = Math.min(value, Math.max(0, contentHeight.current - (height - headerHeight)));\n\n    // The value is a value of the theoretical scroll position of the table,\n    // and the scrollY coordinate value and the value of the scroll bar position are calculated by value.\n    return [-value, value / contentHeight.current * (height - headerHeight)];\n  }, [autoHeight, contentHeight, getTableHeight, headerHeight]);\n  var rerender = function rerender() {\n    setScrolling(true);\n    defer(function () {\n      if (tableBodyRef.current) {\n        setScrolling(false);\n      }\n    });\n  };\n  var getControlledScrollLeftValue = function getControlledScrollLeftValue(value) {\n    // The maximum range of scrolling value is judged.\n    value = Math.min(value, Math.max(0, contentWidth.current - tableWidth.current));\n    return [-value, value / contentWidth.current * tableWidth.current];\n  };\n  var onScrollTop = function onScrollTop(top) {\n    var _scrollbarYRef$curren4, _scrollbarYRef$curren5;\n    if (top === void 0) {\n      top = 0;\n    }\n    var _getControlledScrollT = getControlledScrollTopValue(top),\n      nextScrollY = _getControlledScrollT[0],\n      handleScrollY = _getControlledScrollT[1];\n    var height = getTableHeight();\n    if (!loading && nextScrollY !== scrollY.current) {\n      onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(scrollX.current), Math.abs(nextScrollY));\n    }\n    setScrollY(nextScrollY);\n    scrollbarYRef === null || scrollbarYRef === void 0 ? void 0 : (_scrollbarYRef$curren4 = scrollbarYRef.current) === null || _scrollbarYRef$curren4 === void 0 ? void 0 : (_scrollbarYRef$curren5 = _scrollbarYRef$curren4.resetScrollBarPosition) === null || _scrollbarYRef$curren5 === void 0 ? void 0 : _scrollbarYRef$curren5.call(_scrollbarYRef$curren4, handleScrollY);\n    deferUpdatePosition();\n\n    /**\n     * After calling `scrollTop`, a white screen will appear when `virtualized` is true.\n     * The reason is that the coordinates of the DOM are directly manipulated,\n     * but the component is not re-rendered. Need to call `rerender`.\n     * Fix: rsuite#1044\n     */\n    if (virtualized && contentHeight.current > height) {\n      rerender();\n    }\n  };\n  var onScrollLeft = function onScrollLeft(left) {\n    var _scrollbarXRef$curren3, _scrollbarXRef$curren4;\n    if (left === void 0) {\n      left = 0;\n    }\n    var _getControlledScrollL = getControlledScrollLeftValue(left),\n      nextScrollX = _getControlledScrollL[0],\n      scrollbarX = _getControlledScrollL[1];\n    setScrollX(nextScrollX);\n    !loading && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(nextScrollX), Math.abs(scrollY.current)));\n    scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren3 = scrollbarXRef.current) === null || _scrollbarXRef$curren3 === void 0 ? void 0 : (_scrollbarXRef$curren4 = _scrollbarXRef$curren3.resetScrollBarPosition) === null || _scrollbarXRef$curren4 === void 0 ? void 0 : _scrollbarXRef$curren4.call(_scrollbarXRef$curren3, scrollbarX);\n    deferUpdatePosition();\n  };\n  var onScrollTo = function onScrollTo(coord) {\n    var _ref = coord || {},\n      x = _ref.x,\n      y = _ref.y;\n    if (typeof x === 'number') {\n      onScrollLeft(x);\n    }\n    if (typeof y === 'number') {\n      onScrollTop(y);\n    }\n  };\n  useUpdateEffect(function () {\n    if (scrollY.current !== 0) {\n      onScrollTop(Math.abs(scrollY.current));\n    }\n\n    // fix: #405 #404\n    deferUpdatePosition();\n  }, [heightProp, data]);\n  var releaseListeners = useCallback(function () {\n    var _wheelListener$curren, _touchStartListener$c, _touchMoveListener$cu, _touchEndListener$cur;\n    wheelHandler.current = null;\n    (_wheelListener$curren = wheelListener.current) === null || _wheelListener$curren === void 0 ? void 0 : _wheelListener$curren.off();\n    (_touchStartListener$c = touchStartListener.current) === null || _touchStartListener$c === void 0 ? void 0 : _touchStartListener$c.off();\n    (_touchMoveListener$cu = touchMoveListener.current) === null || _touchMoveListener$cu === void 0 ? void 0 : _touchMoveListener$cu.off();\n    (_touchEndListener$cur = touchEndListener.current) === null || _touchEndListener$cur === void 0 ? void 0 : _touchEndListener$cur.off();\n  }, []);\n  useEffect(function () {\n    var options = {\n      passive: false\n    };\n    var tableBody = tableBodyRef.current;\n    if (tableBody) {\n      // Reset the listener after props is updated.\n      releaseListeners();\n      wheelHandler.current = new WheelHandler(onWheel, shouldHandleWheelX, shouldHandleWheelY, false);\n      wheelListener.current = on(tableBody, 'wheel', wheelHandler.current.onWheel, options);\n      if (isSupportTouchEvent()) {\n        touchStartListener.current = on(tableBody, 'touchstart', handleTouchStart, options);\n        touchMoveListener.current = on(tableBody, 'touchmove', handleTouchMove, options);\n        touchEndListener.current = on(tableBody, 'touchend', handleTouchEnd, options);\n      }\n    }\n    return releaseListeners;\n  }, [handleTouchEnd, handleTouchMove, handleTouchStart, onWheel, releaseListeners, shouldHandleWheelX, shouldHandleWheelY, tableBodyRef]);\n  var onScrollByKeydown = useCallback(function (event) {\n    if (event.currentTarget === event.target && arrowKeysList.indexOf(event.key) > -1) {\n      event.preventDefault();\n      var step = 40;\n      switch (event.key) {\n        case 'ArrowUp':\n          onWheel(0, -step);\n          break;\n        case 'ArrowDown':\n          onWheel(0, step);\n          break;\n        case 'ArrowLeft':\n          onWheel(-step, 0);\n          break;\n        case 'ArrowRight':\n          onWheel(step, 0);\n          break;\n      }\n    }\n  }, [onWheel]);\n  useMount(function () {\n    if (rtl) {\n      var _scrollbarXRef$curren5, _scrollbarXRef$curren6;\n      // Initialize scroll position\n      setScrollX(tableWidth.current - contentWidth.current - SCROLLBAR_WIDTH);\n      scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren5 = scrollbarXRef.current) === null || _scrollbarXRef$curren5 === void 0 ? void 0 : (_scrollbarXRef$curren6 = _scrollbarXRef$curren5.resetScrollBarPosition) === null || _scrollbarXRef$curren6 === void 0 ? void 0 : _scrollbarXRef$curren6.call(_scrollbarXRef$curren5, -scrollX.current);\n      forceUpdatePosition();\n    }\n  });\n  var onScrollHorizontal = useCallback(function (delta) {\n    return handleWheel(delta, 0);\n  }, [handleWheel]);\n  var onScrollVertical = useCallback(function (delta, event) {\n    return handleWheel(0, delta, undefined, event);\n  }, [handleWheel]);\n  return {\n    isScrolling: isScrolling,\n    onScrollHorizontal: onScrollHorizontal,\n    onScrollVertical: onScrollVertical,\n    onScrollBody: onScrollBody,\n    onScrollTop: onScrollTop,\n    onScrollLeft: onScrollLeft,\n    onScrollTo: onScrollTo,\n    onScrollByKeydown: onScrollByKeydown\n  };\n};\nexport default useScrollListener;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}