{"ast":null,"code":"'use client';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\n/**\n * Merges two React refs into a single ref callback.\n */\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (typeof a === 'function') a(value);\n    if (typeof b === 'function') b(value);\n  };\n}\nexport default mergeRefs;","map":{"version":3,"names":["toFnRef","ref","value","current","mergeRefs","refA","refB","a","b"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/internals/utils/mergeRefs.js"],"sourcesContent":["'use client';\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\n/**\n * Merges two React refs into a single ref callback.\n */\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (typeof a === 'function') a(value);\n    if (typeof b === 'function') b(value);\n  };\n}\nexport default mergeRefs;"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,OAAO,GAAG,SAASA,OAAOA,CAACC,GAAG,EAAE;EAClC,OAAO,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,UAAU,GAAGA,GAAG,GAAG,UAAUC,KAAK,EAAE;IAChED,GAAG,CAACE,OAAO,GAAGD,KAAK;EACrB,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,OAAO,SAASE,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACpC,IAAIC,CAAC,GAAGP,OAAO,CAACK,IAAI,CAAC;EACrB,IAAIG,CAAC,GAAGR,OAAO,CAACM,IAAI,CAAC;EACrB,OAAO,UAAUJ,KAAK,EAAE;IACtB,IAAI,OAAOK,CAAC,KAAK,UAAU,EAAEA,CAAC,CAACL,KAAK,CAAC;IACrC,IAAI,OAAOM,CAAC,KAAK,UAAU,EAAEA,CAAC,CAACN,KAAK,CAAC;EACvC,CAAC;AACH;AACA,eAAeE,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}