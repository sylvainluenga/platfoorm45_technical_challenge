{"ast":null,"code":"'use client';\n\nimport useMediaQuery from \"../useMediaQuery/index.js\";\n/**\n * A React Hook that returns different values based on different screen sizes in responsive design.\n * @version 5.63.0\n * @unstable Please note that this API is not stable and may change in the future.\n * @see https://rsuitejs.com/components/use-breakpoint-value\n *\n * @example\n * ```ts\n * const fontSize = useBreakpointValue({ sm: \"14px\", lg: \"24px\" }, { defaultValue: \"16px\" });\n * const direction = useBreakpointValue({ sm: 'row' }, { defaultValue:'column' });\n * ```\n *\n */\nexport function useBreakpointValue(breakpoints, options) {\n  var _ref = options || {},\n    defaultValue = _ref.defaultValue;\n  var keys = Object.keys(breakpoints);\n  var values = Object.values(breakpoints);\n  var matches = useMediaQuery(keys);\n  var index = matches.indexOf(true);\n  return index !== -1 ? values[index] : defaultValue;\n}\nexport default useBreakpointValue;","map":{"version":3,"names":["useMediaQuery","useBreakpointValue","breakpoints","options","_ref","defaultValue","keys","Object","values","matches","index","indexOf"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/useBreakpointValue/useBreakpointValue.js"],"sourcesContent":["'use client';\nimport useMediaQuery from \"../useMediaQuery/index.js\";\n/**\n * A React Hook that returns different values based on different screen sizes in responsive design.\n * @version 5.63.0\n * @unstable Please note that this API is not stable and may change in the future.\n * @see https://rsuitejs.com/components/use-breakpoint-value\n *\n * @example\n * ```ts\n * const fontSize = useBreakpointValue({ sm: \"14px\", lg: \"24px\" }, { defaultValue: \"16px\" });\n * const direction = useBreakpointValue({ sm: 'row' }, { defaultValue:'column' });\n * ```\n *\n */\nexport function useBreakpointValue(breakpoints, options) {\n  var _ref = options || {},\n    defaultValue = _ref.defaultValue;\n  var keys = Object.keys(breakpoints);\n  var values = Object.values(breakpoints);\n  var matches = useMediaQuery(keys);\n  var index = matches.indexOf(true);\n  return index !== -1 ? values[index] : defaultValue;\n}\nexport default useBreakpointValue;"],"mappings":"AAAA,YAAY;;AACZ,OAAOA,aAAa,MAAM,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,WAAW,EAAEC,OAAO,EAAE;EACvD,IAAIC,IAAI,GAAGD,OAAO,IAAI,CAAC,CAAC;IACtBE,YAAY,GAAGD,IAAI,CAACC,YAAY;EAClC,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACJ,WAAW,CAAC;EACnC,IAAIM,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACN,WAAW,CAAC;EACvC,IAAIO,OAAO,GAAGT,aAAa,CAACM,IAAI,CAAC;EACjC,IAAII,KAAK,GAAGD,OAAO,CAACE,OAAO,CAAC,IAAI,CAAC;EACjC,OAAOD,KAAK,KAAK,CAAC,CAAC,GAAGF,MAAM,CAACE,KAAK,CAAC,GAAGL,YAAY;AACpD;AACA,eAAeJ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}