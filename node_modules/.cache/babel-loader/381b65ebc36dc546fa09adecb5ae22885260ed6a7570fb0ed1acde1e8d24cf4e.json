{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport { useEventCallback, useUpdateEffect, useIsMounted } from \"../../internals/hooks/index.js\";\nimport useFlattenData from \"./useFlattenData.js\";\nimport useColumnData from \"./useColumnData.js\";\nvar useSelect = function useSelect(props) {\n  var data = props.data,\n    childrenKey = props.childrenKey,\n    labelKey = props.labelKey,\n    valueKey = props.valueKey,\n    onSelect = props.onSelect,\n    getChildren = props.getChildren;\n  var itemKeys = {\n    childrenKey: childrenKey,\n    labelKey: labelKey,\n    valueKey: valueKey\n  };\n  var _useFlattenData = useFlattenData(data, itemKeys),\n    flattenData = _useFlattenData.flattenData,\n    addFlattenData = _useFlattenData.addFlattenData;\n\n  // The columns displayed in the cascading panel.\n  var _useColumnData = useColumnData(flattenData),\n    columnData = _useColumnData.columnData,\n    addColumn = _useColumnData.addColumn,\n    setColumnData = _useColumnData.setColumnData,\n    removeColumnByIndex = _useColumnData.removeColumnByIndex,\n    enforceUpdateColumnData = _useColumnData.enforceUpdateColumnData;\n  useUpdateEffect(function () {\n    enforceUpdateColumnData(data);\n  }, [data]);\n  var isMounted = useIsMounted();\n\n  // The path after cascading data selection.\n  var _useState = useState(),\n    selectedPaths = _useState[0],\n    setSelectedPaths = _useState[1];\n  var handleSelect = useEventCallback(function (node, cascadePaths, event) {\n    var _node$childrenKey, _node$childrenKey2;\n    setSelectedPaths(cascadePaths);\n    var columnIndex = cascadePaths.length;\n\n    // Lazy load node's children\n    if (typeof getChildren === 'function' && ((_node$childrenKey = node[childrenKey]) === null || _node$childrenKey === void 0 ? void 0 : _node$childrenKey.length) === 0) {\n      node.loading = true;\n      var children = getChildren(node);\n      if (children instanceof Promise) {\n        children.then(function (data) {\n          node.loading = false;\n          node[childrenKey] = data;\n          if (isMounted()) {\n            addFlattenData(data, node);\n            addColumn(data, columnIndex);\n          }\n        });\n      } else {\n        node.loading = false;\n        node[childrenKey] = children;\n        addFlattenData(children, node);\n        addColumn(children, columnIndex);\n      }\n    } else if ((_node$childrenKey2 = node[childrenKey]) !== null && _node$childrenKey2 !== void 0 && _node$childrenKey2.length) {\n      addColumn(node[childrenKey], columnIndex);\n    } else {\n      // Removes subsequent columns of the current column when the clicked node is a leaf node.\n      removeColumnByIndex(columnIndex);\n    }\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, cascadePaths, event);\n  });\n  return {\n    columnData: columnData,\n    setColumnData: setColumnData,\n    flattenData: flattenData,\n    selectedPaths: selectedPaths,\n    setSelectedPaths: setSelectedPaths,\n    handleSelect: handleSelect\n  };\n};\nexport default useSelect;","map":{"version":3,"names":["useState","useEventCallback","useUpdateEffect","useIsMounted","useFlattenData","useColumnData","useSelect","props","data","childrenKey","labelKey","valueKey","onSelect","getChildren","itemKeys","_useFlattenData","flattenData","addFlattenData","_useColumnData","columnData","addColumn","setColumnData","removeColumnByIndex","enforceUpdateColumnData","isMounted","_useState","selectedPaths","setSelectedPaths","handleSelect","node","cascadePaths","event","_node$childrenKey","_node$childrenKey2","columnIndex","length","loading","children","Promise","then"],"sources":["C:/Users/lenovo/OneDrive/Documents/local project/platfoorm45_technical_challenge/node_modules/rsuite/esm/MultiCascadeTree/hooks/useSelect.js"],"sourcesContent":["'use client';\nimport { useState } from 'react';\nimport { useEventCallback, useUpdateEffect, useIsMounted } from \"../../internals/hooks/index.js\";\nimport useFlattenData from \"./useFlattenData.js\";\nimport useColumnData from \"./useColumnData.js\";\nvar useSelect = function useSelect(props) {\n  var data = props.data,\n    childrenKey = props.childrenKey,\n    labelKey = props.labelKey,\n    valueKey = props.valueKey,\n    onSelect = props.onSelect,\n    getChildren = props.getChildren;\n  var itemKeys = {\n    childrenKey: childrenKey,\n    labelKey: labelKey,\n    valueKey: valueKey\n  };\n  var _useFlattenData = useFlattenData(data, itemKeys),\n    flattenData = _useFlattenData.flattenData,\n    addFlattenData = _useFlattenData.addFlattenData;\n\n  // The columns displayed in the cascading panel.\n  var _useColumnData = useColumnData(flattenData),\n    columnData = _useColumnData.columnData,\n    addColumn = _useColumnData.addColumn,\n    setColumnData = _useColumnData.setColumnData,\n    removeColumnByIndex = _useColumnData.removeColumnByIndex,\n    enforceUpdateColumnData = _useColumnData.enforceUpdateColumnData;\n  useUpdateEffect(function () {\n    enforceUpdateColumnData(data);\n  }, [data]);\n  var isMounted = useIsMounted();\n\n  // The path after cascading data selection.\n  var _useState = useState(),\n    selectedPaths = _useState[0],\n    setSelectedPaths = _useState[1];\n  var handleSelect = useEventCallback(function (node, cascadePaths, event) {\n    var _node$childrenKey, _node$childrenKey2;\n    setSelectedPaths(cascadePaths);\n    var columnIndex = cascadePaths.length;\n\n    // Lazy load node's children\n    if (typeof getChildren === 'function' && ((_node$childrenKey = node[childrenKey]) === null || _node$childrenKey === void 0 ? void 0 : _node$childrenKey.length) === 0) {\n      node.loading = true;\n      var children = getChildren(node);\n      if (children instanceof Promise) {\n        children.then(function (data) {\n          node.loading = false;\n          node[childrenKey] = data;\n          if (isMounted()) {\n            addFlattenData(data, node);\n            addColumn(data, columnIndex);\n          }\n        });\n      } else {\n        node.loading = false;\n        node[childrenKey] = children;\n        addFlattenData(children, node);\n        addColumn(children, columnIndex);\n      }\n    } else if ((_node$childrenKey2 = node[childrenKey]) !== null && _node$childrenKey2 !== void 0 && _node$childrenKey2.length) {\n      addColumn(node[childrenKey], columnIndex);\n    } else {\n      // Removes subsequent columns of the current column when the clicked node is a leaf node.\n      removeColumnByIndex(columnIndex);\n    }\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, cascadePaths, event);\n  });\n  return {\n    columnData: columnData,\n    setColumnData: setColumnData,\n    flattenData: flattenData,\n    selectedPaths: selectedPaths,\n    setSelectedPaths: setSelectedPaths,\n    handleSelect: handleSelect\n  };\n};\nexport default useSelect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}